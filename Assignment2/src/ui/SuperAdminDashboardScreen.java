/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import entities.Doctor;
import entities.Encounter;
import entities.Hospital;
import entities.Patient;
import entities.Person;
import entities.NewPerson;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import models.DataStorageClass;

/**
 *
 * @author rohit
 */
public class SuperAdminDashboardScreen extends javax.swing.JFrame {

    private int HOSPITAL_INDEX_TO_UPDATE_DELETE = -1;
    private int DOCTOR_INDEX_TO_UPDATE_DELETE = -1;
    private DefaultTableModel superadmin_Hospital_Screen_TableDataDefaultTableModel, superadmin_Doctors_Screen_TableDataDefaultTableModel, superadmin_Patient_Screen_TableDataDefaultTableModel,
            person_Screen_hospitals_table_DefaultTableModel, doctor_Screen_All_Patients_Table_DefaultTableModel, superadmin_Encounters_Screen_TableDataDefaultTableModel, patient_all_encounters_DefaultTableModel,
            superadmin_approvepatientsscreen_all_persons_table_DefaultTableModel, Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel, Hospital_Screen_Add_Doctor_AllDoctorsTableDefaultTableModel;
    private ArrayList<Person> filteredHospitalPersonsArrayList;
    private ItemListener selectHospitalItemListener;
    private ListSelectionListener selectHospitalIListSelectionListener, selectPersonScreenDoctorListSelectionListener, Hospital_Admin_Select_DoctorListSelectionListener, superadmin_select_doctor_add_doctor_screen_listener;
    private DefaultListModel hospitalDefaultListModel, doctorsDefaultListModel;
    private ArrayList<Doctor> doctorsinhospital;
    private ArrayList<Hospital> filteredHospitalsforDoctorsScreenCommunityAdmin;
    private int HOSPITAL_ARRAYLIST_INDEX, PATIENT_ARRAYLIST_INDEX;
    private String USER_ROLE = "";
    private boolean HOSPITAL_SCREEN_TABLE_MOUSE_LISTENER_STATUS = false;
    private boolean DOCTOR_SCREEN_TABLE_MOUSE_LISTENER_STATUS = false;
    private boolean SUPER_ADMIN_ADD_DOCTOR_LISTENER = false;
    private boolean ADD_DR_UPDATED_DELETED = false;
    private boolean SUPERADMIN_ADD_PATIENT_TABLE_LISTENER = false;
    private boolean PATIENT_UPDATED = false;
    private boolean HOSTPITAL_ADD_DOCTORTABLE_MOUSE_LISTENER_STATUS = false;
    public boolean HOSPITAL_SCREEN_PATIENTS_TABLE = false;
    private boolean COMMUNITY_ADMIN_DOCTOR_SCREEN_TABLE_MOUSE_LISTENER_STATUS = false;
    private ArrayList<Doctor> doctorsArrayList;
    private ArrayList<Patient> patientsArrayList; 
    /**
     * Creates new form SuperAdminDashboardScreen
     */
    
    public void tempsetScreen(String userrole)
    {
        USER_ROLE = userrole;
    }
    public SuperAdminDashboardScreen() {
        
        initComponents();
        initTabChangeListeners();
        initSuperUserAddHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        super_admin_hospital_Screen_jPanel = new javax.swing.JPanel();
        hospital_Screen_allHospitalsTablePanel = new javax.swing.JPanel();
        hospital_Screen_tableTitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        superadmin_Hospitals_Screen_All_Hospitals_Table = new javax.swing.JTable();
        superAdminDashboardScreen_DeleteUpdatePanel = new javax.swing.JPanel();
        hospital_Screen_update_button = new javax.swing.JButton();
        hospital_Screen_delete_button = new javax.swing.JButton();
        superAdminDashboardScreen_Reset_AddButtonPanel = new javax.swing.JPanel();
        superAdminDashboardScreenAdd_Details_Reset_Button = new javax.swing.JButton();
        hospital_Screen_add_hospital_button = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        hospital_Screen_hospitalNameTextField = new javax.swing.JTextField();
        hospital_Screen_hospitalAddressTextField = new javax.swing.JTextField();
        hospital_Screen_HospitalIdTextField = new javax.swing.JTextField();
        hospital_Screen_hospitalCommunityComboBox = new javax.swing.JComboBox<>();
        hospital_Screen_hospitalPincodeTextField = new javax.swing.JTextField();
        hospital_Screen_hospitalCityTextField = new javax.swing.JTextField();
        hospital_Screen_password_TextField = new javax.swing.JPasswordField();
        jPanel27 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        super_admin_doctor_screen_jpanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        superadmin_Doctors_Screen_All_Doctors_Table = new javax.swing.JTable();
        superadmin_Doctors_Screen_Table_Label = new javax.swing.JLabel();
        superAdmin_Doctor_Screen_Add_Reset_Panel = new javax.swing.JPanel();
        superadmin_Doctors_Screen_Add_Button = new javax.swing.JButton();
        superadmin_Doctors_Screen_Reset_Button = new javax.swing.JButton();
        superadmin_Doctors_Screen_UpdateButton = new javax.swing.JButton();
        superadmin_Doctors_Screen_Delete_Button = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        superadmin_Doctors_Screen_Id_Textfield = new javax.swing.JTextField();
        superadmin_Doctors_Screen_Phone_TextField = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        superadmin_Doctors_Screen_Hospital_List = new javax.swing.JList<>();
        superadmin_Doctors_Screen_Name_TextField = new javax.swing.JTextField();
        superAdmin_Doctor_Screen_Delete_UpdatePanel = new javax.swing.JPanel();
        idlabel = new javax.swing.JLabel();
        superadmin_Doctors_Screen_hospital_id_label = new javax.swing.JLabel();
        superadmin_Doctors_Screen_doctor_id_label = new javax.swing.JLabel();
        idlabel1 = new javax.swing.JLabel();
        superadmin_Doctors_Screen_Department_Combo_Box = new javax.swing.JComboBox<>();
        superadmin_Doctors_Screen_Password_Textfield = new javax.swing.JPasswordField();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        Person_Screen_All_Hospitals_Table = new javax.swing.JTable();
        Person_Screen_Table_Label = new javax.swing.JLabel();
        Person_Screen_Search_Button = new javax.swing.JButton();
        Person_Screen_Pincode_TextField = new javax.swing.JTextField();
        Person_Screen_Pincode_Label = new javax.swing.JLabel();
        Person_Screen_ViewAllButton = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel81 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        Person_Registeration_Screen_SelectDoctorList = new javax.swing.JList<>();
        superAdminDashboardScreen_Add_Panel6 = new javax.swing.JPanel();
        Person_Registeration_Screen_ResetButton = new javax.swing.JButton();
        Person_Registeration_Screen_RegisterButton = new javax.swing.JButton();
        Person_Registeration_Screen_HospitalId_Label = new javax.swing.JLabel();
        Person_Registeration_Screen_HospitalNameLabel = new javax.swing.JLabel();
        Person_Registeration_Screen_DepartmentComboBox = new javax.swing.JComboBox<>();
        Person_Registeration_Screen_passwordTextField = new javax.swing.JPasswordField();
        Person_Registeration_Screen_AddressTextField = new javax.swing.JTextField();
        Person_Registeration_Screen_DoctorId_Label = new javax.swing.JLabel();
        Person_Registeration_Screen_idTextField = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        Person_Registeration_Screen_PhoneTextField = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        Person_Registeration_Screen_PinTextField = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        Person_Registeration_Screen_nameTextField = new javax.swing.JTextField();
        Person_Registeration_Screen_DoctorId_Label1 = new javax.swing.JLabel();
        Person_Registeration_Screen_Community_Label = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Patient_Screen_PatientId_TextField = new javax.swing.JTextField();
        Patient_Screen_PatientPhone_TextField = new javax.swing.JTextField();
        Patient_Screen_Patient_Name_TextField = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        Patient_Screen_Hospital_TextField = new javax.swing.JTextField();
        Patient_Screen_DoctorName_TextField = new javax.swing.JTextField();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        Patient_Screen_EncounterHistoryTable1 = new javax.swing.JTable();
        superadmin_Encounters_Screen_TableTitle_Label1 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Doctor_Assigned_Patients_Screen_AssignedPatients_Table = new javax.swing.JTable();
        Doctor_Assigned_Patients_Screen_Table_Title_Label = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        Hospital_Admin_Add_PatientScreen_Id_Textfield = new javax.swing.JTextField();
        Hospital_Admin_Add_PatientScreen_Phone_TextField = new javax.swing.JTextField();
        Hospital_Admin_Add_PatientScreen__TextField = new javax.swing.JTextField();
        Hospital_Admin_Add_PatientScreen_ComboBox = new javax.swing.JComboBox<>();
        Hospital_Admin_Add_PatientScreen_Textfield = new javax.swing.JPasswordField();
        jScrollPane6 = new javax.swing.JScrollPane();
        Hospital_Admin_Add_PatientScreen_DoctorList = new javax.swing.JList<>();
        Hospital_Admin_Add_PatientScreen_HospitalNameTextField = new javax.swing.JLabel();
        Hospital_Admin_Add_PatientScreen_HospitaIdTextField = new javax.swing.JLabel();
        Hospital_Admin_Add_PatientScreen_DoctorIDTextField = new javax.swing.JLabel();
        Hospital_Admin_Add_PatientScreen_Address_TextField = new javax.swing.JTextField();
        Hospital_Admin_Add_PatientScreen_Pincode_TextField = new javax.swing.JTextField();
        superAdminDashboardScreen_Add_Panel10 = new javax.swing.JPanel();
        Hospital_Admin_Add_PatientScreen_AddButton = new javax.swing.JButton();
        Hospital_Screen_AddPatients_Tab_ResetButton = new javax.swing.JButton();
        Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel = new javax.swing.JPanel();
        Hospital_Patient_Screen_DeleteButton = new javax.swing.JButton();
        Hospital_Patient_Screen_UpdateButton = new javax.swing.JButton();
        jPanel46 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        Hospital_Admin_Add_PatientScreen_All_Patients_Table = new javax.swing.JTable();
        Hospital_Admin_Add_PatientScreen_Table_Label2 = new javax.swing.JLabel();
        Hospital_Admin_Add_PatientScreen_Button = new javax.swing.JButton();
        Hospital_Admin_Add_PatientScreen_TextField2 = new javax.swing.JTextField();
        Hospital_Admin_Add_PatientScreen_Label2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        superadmin_Encounters_Screen_EncounterHistoryTable = new javax.swing.JTable();
        superadmin_Encounters_Screen_TableTitle_Label = new javax.swing.JLabel();
        superadmin_Encounters_Screen_GetButton = new javax.swing.JButton();
        superadmin_Encounters_Screen_SearchPatientID_TextField = new javax.swing.JTextField();
        superadmin_Encounters_Screen_SearchLabel = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        superAdminDashboardScreen_Add_Panel5 = new javax.swing.JPanel();
        superadmin_Encounters_Screen_Add_Button = new javax.swing.JButton();
        superAdminDashboardScreenAdd_Details_Reset_Button6 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        superadmin_Encounters_Screen_patientIdTextField = new javax.swing.JTextField();
        superadmin_Encounters_Screen_PatientPhoneTextField = new javax.swing.JTextField();
        superadmin_Encounters_Screen_PatientNameTextField = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        superadmin_Encounters_Screen_Patient_Hospital_TextField = new javax.swing.JTextField();
        superadmin_Encounters_Screen_Doctor_Name_TextField = new javax.swing.JTextField();
        superadmin_Encounters_Screen_TemperatureTextField = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        superadmin_Encounters_Screen_BloodPressure_TextField = new javax.swing.JTextField();
        superadmin_Encounters_Screen_Patient_HospitalId_TextField = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Approve_Patients_Screen_Table = new javax.swing.JTable();
        Approve_Patients_Screen_Table_Title = new javax.swing.JLabel();
        Approve_Patients_Screen_ApproveButton = new javax.swing.JButton();
        super_admin_doctor_screen_jpanel1 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Hospital_Screen_Add_Doctor_AllDoctorsTable = new javax.swing.JTable();
        Hospital_Screen_Add_Doctor_Table_Title_Label = new javax.swing.JLabel();
        Hospital_Screen_Add_Doctor_GetButton = new javax.swing.JButton();
        Hospital_Screen_Add_Doctor_SearchDoctorId_TextField = new javax.swing.JTextField();
        Hospital_Screen_Add_Doctor_Search_Label = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        Hospital_Screen_Add_Doctor_Id_Textfield = new javax.swing.JTextField();
        Hospital_Screen_Add_Doctor_Phone_TextField = new javax.swing.JTextField();
        Hospital_Screen_Add_Doctor_NameTextField = new javax.swing.JTextField();
        hospital_screen_delete_update_panel = new javax.swing.JPanel();
        Hospital_Screen_Add_Doctor_UpdateButton = new javax.swing.JButton();
        Hospital_Screen_Add_Doctor_DeleteButton = new javax.swing.JButton();
        superAdminDashboardScreen_Add_Panel8 = new javax.swing.JPanel();
        Hospital_Screen_Add_Doctor_AddButton = new javax.swing.JButton();
        Hospital_Screen_Add_Doctor_ResetButton = new javax.swing.JButton();
        Hospital_Screen_Add_Doctor_DepartmentComboBox = new javax.swing.JComboBox<>();
        Hospital_Screen_Add_Doctor_Password_TextField = new javax.swing.JPasswordField();
        Hospital_Screen_Add_Doctor_Hospital_Name_Label = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        superadmin_Patient_Screen_AllPatients_Table = new javax.swing.JTable();
        superadmin_Patient_Screen_TableTitle_Label = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        superadmin_add_patient_screen_reset_add_panel = new javax.swing.JPanel();
        superadmin_Patient_Screen_ResetButton = new javax.swing.JButton();
        superadmin_Patient_Screen_AddButton = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        superadmin_Patient_Screen_Select_HospitalList = new javax.swing.JList<>();
        superadmin_Patient_Screen_Patient_DepartmentComboBox = new javax.swing.JComboBox<>();
        superadmin_Patient_Screen_Patient_Address_TextField = new javax.swing.JTextField();
        superadmin_Patients_Screen_patientId_TextField = new javax.swing.JTextField();
        superadmin_Patient_Screen_PatientPhone_TextField = new javax.swing.JTextField();
        superadmin_Patient_Screen_Patient_Pin_TextField = new javax.swing.JTextField();
        superadmin_Patient_Screen_PatientNameTextField = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        superadmin_Patient_Screen_Select_DoctorList = new javax.swing.JList<>();
        superadmin_Patients_Screen_password_TextField = new javax.swing.JPasswordField();
        superAdminDashboardScreen_Update_Panel4 = new javax.swing.JPanel();
        superadmin_Patient_Screen_UpdateButton = new javax.swing.JButton();
        superadmin_Patient_Screen_DeleteButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        superadmin_patient_patientId_label = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        superadmin_patient_patientId_label1 = new javax.swing.JLabel();
        MainExitButton = new javax.swing.JButton();
        MainLogoutButton = new javax.swing.JButton();
        MainLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hospital Management System");
        setBackground(new java.awt.Color(255, 0, 0));
        setMinimumSize(new java.awt.Dimension(1024, 576));

        tabbedPane.setMinimumSize(new java.awt.Dimension(1024, 700));
        tabbedPane.setPreferredSize(new java.awt.Dimension(1024, 700));

        super_admin_hospital_Screen_jPanel.setForeground(new java.awt.Color(255, 102, 102));
        super_admin_hospital_Screen_jPanel.setMinimumSize(new java.awt.Dimension(983, 400));
        super_admin_hospital_Screen_jPanel.setPreferredSize(new java.awt.Dimension(983, 400));

        hospital_Screen_allHospitalsTablePanel.setMinimumSize(new java.awt.Dimension(550, 400));
        hospital_Screen_allHospitalsTablePanel.setPreferredSize(new java.awt.Dimension(550, 400));

        hospital_Screen_tableTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hospital_Screen_tableTitleLabel.setText("All Hospitals");

        superadmin_Hospitals_Screen_All_Hospitals_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        superadmin_Hospitals_Screen_All_Hospitals_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        superadmin_Hospitals_Screen_All_Hospitals_Table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        superadmin_Hospitals_Screen_All_Hospitals_Table.setMaximumSize(new java.awt.Dimension(500, 0));
        superadmin_Hospitals_Screen_All_Hospitals_Table.setMinimumSize(new java.awt.Dimension(500, 0));
        superadmin_Hospitals_Screen_All_Hospitals_Table.setPreferredSize(new java.awt.Dimension(500, 0));
        superadmin_Hospitals_Screen_All_Hospitals_Table.setShowVerticalLines(true);
        jScrollPane1.setViewportView(superadmin_Hospitals_Screen_All_Hospitals_Table);

        hospital_Screen_update_button.setBackground(new java.awt.Color(204, 204, 255));
        hospital_Screen_update_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hospital_Screen_update_button.setText("UPDATE");
        hospital_Screen_update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospital_Screen_update_buttonActionPerformed(evt);
            }
        });

        hospital_Screen_delete_button.setBackground(new java.awt.Color(255, 102, 102));
        hospital_Screen_delete_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hospital_Screen_delete_button.setText("DELETE");
        hospital_Screen_delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospital_Screen_delete_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdminDashboardScreen_DeleteUpdatePanelLayout = new javax.swing.GroupLayout(superAdminDashboardScreen_DeleteUpdatePanel);
        superAdminDashboardScreen_DeleteUpdatePanel.setLayout(superAdminDashboardScreen_DeleteUpdatePanelLayout);
        superAdminDashboardScreen_DeleteUpdatePanelLayout.setHorizontalGroup(
            superAdminDashboardScreen_DeleteUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_DeleteUpdatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hospital_Screen_update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        superAdminDashboardScreen_DeleteUpdatePanelLayout.setVerticalGroup(
            superAdminDashboardScreen_DeleteUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_DeleteUpdatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(superAdminDashboardScreen_DeleteUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospital_Screen_update_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hospital_Screen_delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        superAdminDashboardScreenAdd_Details_Reset_Button.setBackground(new java.awt.Color(204, 204, 255));
        superAdminDashboardScreenAdd_Details_Reset_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superAdminDashboardScreenAdd_Details_Reset_Button.setText("RESET");
        superAdminDashboardScreenAdd_Details_Reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superAdminDashboardScreenAdd_Details_Reset_ButtonActionPerformed(evt);
            }
        });

        hospital_Screen_add_hospital_button.setBackground(new java.awt.Color(204, 204, 255));
        hospital_Screen_add_hospital_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hospital_Screen_add_hospital_button.setText("ADD");
        hospital_Screen_add_hospital_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospital_Screen_add_hospital_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdminDashboardScreen_Reset_AddButtonPanelLayout = new javax.swing.GroupLayout(superAdminDashboardScreen_Reset_AddButtonPanel);
        superAdminDashboardScreen_Reset_AddButtonPanel.setLayout(superAdminDashboardScreen_Reset_AddButtonPanelLayout);
        superAdminDashboardScreen_Reset_AddButtonPanelLayout.setHorizontalGroup(
            superAdminDashboardScreen_Reset_AddButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, superAdminDashboardScreen_Reset_AddButtonPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(hospital_Screen_add_hospital_button, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superAdminDashboardScreenAdd_Details_Reset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        superAdminDashboardScreen_Reset_AddButtonPanelLayout.setVerticalGroup(
            superAdminDashboardScreen_Reset_AddButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Reset_AddButtonPanelLayout.createSequentialGroup()
                .addGroup(superAdminDashboardScreen_Reset_AddButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superAdminDashboardScreenAdd_Details_Reset_Button)
                    .addComponent(hospital_Screen_add_hospital_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout hospital_Screen_allHospitalsTablePanelLayout = new javax.swing.GroupLayout(hospital_Screen_allHospitalsTablePanel);
        hospital_Screen_allHospitalsTablePanel.setLayout(hospital_Screen_allHospitalsTablePanelLayout);
        hospital_Screen_allHospitalsTablePanelLayout.setHorizontalGroup(
            hospital_Screen_allHospitalsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_Screen_allHospitalsTablePanelLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(hospital_Screen_allHospitalsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hospital_Screen_tableTitleLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(hospital_Screen_allHospitalsTablePanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(superAdminDashboardScreen_Reset_AddButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(superAdminDashboardScreen_DeleteUpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        hospital_Screen_allHospitalsTablePanelLayout.setVerticalGroup(
            hospital_Screen_allHospitalsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_Screen_allHospitalsTablePanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(hospital_Screen_tableTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(hospital_Screen_allHospitalsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(superAdminDashboardScreen_DeleteUpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superAdminDashboardScreen_Reset_AddButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setMinimumSize(new java.awt.Dimension(336, 350));
        jPanel5.setPreferredSize(new java.awt.Dimension(336, 350));

        hospital_Screen_hospitalNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hospital_Screen_hospitalNameTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        hospital_Screen_hospitalNameTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        hospital_Screen_hospitalAddressTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hospital_Screen_hospitalAddressTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        hospital_Screen_hospitalAddressTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        hospital_Screen_HospitalIdTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hospital_Screen_HospitalIdTextField.setText("H1");
        hospital_Screen_HospitalIdTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        hospital_Screen_HospitalIdTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        hospital_Screen_hospitalCommunityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Mountain View", "Back Bay", "Brighton" }));

        hospital_Screen_hospitalPincodeTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hospital_Screen_hospitalPincodeTextField.setText("02120");
        hospital_Screen_hospitalPincodeTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        hospital_Screen_hospitalPincodeTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        hospital_Screen_hospitalCityTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hospital_Screen_hospitalCityTextField.setText("Boston");
        hospital_Screen_hospitalCityTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        hospital_Screen_hospitalCityTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        hospital_Screen_password_TextField.setText("123");
        hospital_Screen_password_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(hospital_Screen_HospitalIdTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(hospital_Screen_hospitalPincodeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hospital_Screen_hospitalCityTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hospital_Screen_hospitalAddressTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hospital_Screen_hospitalCommunityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(hospital_Screen_hospitalNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospital_Screen_password_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hospital_Screen_HospitalIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_password_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(hospital_Screen_hospitalNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_hospitalAddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_hospitalCityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_hospitalPincodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_hospitalCommunityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
        );

        jLabel15.setText("Hospital City");

        jLabel14.setText("Hospital Address");

        jLabel16.setText("Hospital Pincode");

        jLabel17.setText("Hospital Name");

        jLabel1.setText("Hospital ID");

        jLabel58.setText("Hospital Community");

        jLabel61.setText("Hospital Admin Password");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel61)
                            .addComponent(jLabel17)
                            .addComponent(jLabel1)
                            .addComponent(jLabel16))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout super_admin_hospital_Screen_jPanelLayout = new javax.swing.GroupLayout(super_admin_hospital_Screen_jPanel);
        super_admin_hospital_Screen_jPanel.setLayout(super_admin_hospital_Screen_jPanelLayout);
        super_admin_hospital_Screen_jPanelLayout.setHorizontalGroup(
            super_admin_hospital_Screen_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(super_admin_hospital_Screen_jPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_Screen_allHospitalsTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        super_admin_hospital_Screen_jPanelLayout.setVerticalGroup(
            super_admin_hospital_Screen_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(super_admin_hospital_Screen_jPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(super_admin_hospital_Screen_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(super_admin_hospital_Screen_jPanelLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addComponent(hospital_Screen_allHospitalsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)))
        );

        tabbedPane.addTab("HOSPITAL", super_admin_hospital_Screen_jPanel);

        super_admin_doctor_screen_jpanel.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel4.setMinimumSize(new java.awt.Dimension(550, 350));

        superadmin_Doctors_Screen_All_Doctors_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane2.setViewportView(superadmin_Doctors_Screen_All_Doctors_Table);

        superadmin_Doctors_Screen_Table_Label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        superadmin_Doctors_Screen_Table_Label.setText("All Doctors");

        superadmin_Doctors_Screen_Add_Button.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Doctors_Screen_Add_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Doctors_Screen_Add_Button.setText("ADD");
        superadmin_Doctors_Screen_Add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Doctors_Screen_Add_ButtonActionPerformed(evt);
            }
        });

        superadmin_Doctors_Screen_Reset_Button.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Doctors_Screen_Reset_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Doctors_Screen_Reset_Button.setText("RESET");
        superadmin_Doctors_Screen_Reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Doctors_Screen_Reset_ButtonActionPerformed(evt);
            }
        });

        superadmin_Doctors_Screen_UpdateButton.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Doctors_Screen_UpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Doctors_Screen_UpdateButton.setText("UPDATE");
        superadmin_Doctors_Screen_UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Doctors_Screen_UpdateButtonActionPerformed(evt);
            }
        });

        superadmin_Doctors_Screen_Delete_Button.setBackground(new java.awt.Color(255, 102, 102));
        superadmin_Doctors_Screen_Delete_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Doctors_Screen_Delete_Button.setText("DELETE");
        superadmin_Doctors_Screen_Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Doctors_Screen_Delete_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdmin_Doctor_Screen_Add_Reset_PanelLayout = new javax.swing.GroupLayout(superAdmin_Doctor_Screen_Add_Reset_Panel);
        superAdmin_Doctor_Screen_Add_Reset_Panel.setLayout(superAdmin_Doctor_Screen_Add_Reset_PanelLayout);
        superAdmin_Doctor_Screen_Add_Reset_PanelLayout.setHorizontalGroup(
            superAdmin_Doctor_Screen_Add_Reset_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, superAdmin_Doctor_Screen_Add_Reset_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(superadmin_Doctors_Screen_Add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Doctors_Screen_Reset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Doctors_Screen_UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Doctors_Screen_Delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
        );
        superAdmin_Doctor_Screen_Add_Reset_PanelLayout.setVerticalGroup(
            superAdmin_Doctor_Screen_Add_Reset_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, superAdmin_Doctor_Screen_Add_Reset_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(superAdmin_Doctor_Screen_Add_Reset_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superadmin_Doctors_Screen_Add_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Doctors_Screen_Reset_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Doctors_Screen_Delete_Button)
                    .addComponent(superadmin_Doctors_Screen_UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(superAdmin_Doctor_Screen_Add_Reset_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(superadmin_Doctors_Screen_Table_Label)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(superadmin_Doctors_Screen_Table_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(superAdmin_Doctor_Screen_Add_Reset_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        jPanel6.setMinimumSize(new java.awt.Dimension(336, 350));

        jLabel25.setText("Doctor Name");

        jLabel2.setText("Doctor ID");

        jLabel23.setText("Department");

        jLabel26.setText("Doctor Phone");

        jLabel24.setText("Select Hospital");

        jLabel27.setText("Password");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25)
                    .addComponent(jLabel2)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 78, Short.MAX_VALUE))
        );

        superadmin_Doctors_Screen_Id_Textfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Doctors_Screen_Id_Textfield.setText("D1");
        superadmin_Doctors_Screen_Id_Textfield.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Doctors_Screen_Id_Textfield.setPreferredSize(new java.awt.Dimension(203, 26));
        superadmin_Doctors_Screen_Id_Textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Doctors_Screen_Id_TextfieldActionPerformed(evt);
            }
        });

        superadmin_Doctors_Screen_Phone_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Doctors_Screen_Phone_TextField.setText("4");
        superadmin_Doctors_Screen_Phone_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Doctors_Screen_Phone_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Doctors_Screen_Hospital_List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane12.setViewportView(superadmin_Doctors_Screen_Hospital_List);

        superadmin_Doctors_Screen_Name_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Doctors_Screen_Name_TextField.setText("Dr. TC");
        superadmin_Doctors_Screen_Name_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Doctors_Screen_Name_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        idlabel.setText("Hospital ID");

        superadmin_Doctors_Screen_hospital_id_label.setText("-");

        superadmin_Doctors_Screen_doctor_id_label.setText("-");

        idlabel1.setText("Doctor ID");

        javax.swing.GroupLayout superAdmin_Doctor_Screen_Delete_UpdatePanelLayout = new javax.swing.GroupLayout(superAdmin_Doctor_Screen_Delete_UpdatePanel);
        superAdmin_Doctor_Screen_Delete_UpdatePanel.setLayout(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout);
        superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.setHorizontalGroup(
            superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idlabel)
                    .addComponent(idlabel1))
                .addGap(42, 42, 42)
                .addGroup(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(superadmin_Doctors_Screen_doctor_id_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Doctors_Screen_hospital_id_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.setVerticalGroup(
            superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createSequentialGroup()
                .addGroup(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Doctors_Screen_hospital_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(superAdmin_Doctor_Screen_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Doctors_Screen_doctor_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        superadmin_Doctors_Screen_Department_Combo_Box.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Doctors_Screen_Department_Combo_Box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adult", "Teen", "Children", "Emergency" }));
        superadmin_Doctors_Screen_Department_Combo_Box.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Doctors_Screen_Department_Combo_Box.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Doctors_Screen_Password_Textfield.setText("123");
        superadmin_Doctors_Screen_Password_Textfield.setPreferredSize(new java.awt.Dimension(203, 26));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(superadmin_Doctors_Screen_Id_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(superadmin_Doctors_Screen_Phone_TextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(superadmin_Doctors_Screen_Department_Combo_Box, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(superadmin_Doctors_Screen_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(superadmin_Doctors_Screen_Password_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(superAdmin_Doctor_Screen_Delete_UpdatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(superadmin_Doctors_Screen_Id_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Doctors_Screen_Password_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(superadmin_Doctors_Screen_Name_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Doctors_Screen_Phone_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Doctors_Screen_Department_Combo_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(superAdmin_Doctor_Screen_Delete_UpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout super_admin_doctor_screen_jpanelLayout = new javax.swing.GroupLayout(super_admin_doctor_screen_jpanel);
        super_admin_doctor_screen_jpanel.setLayout(super_admin_doctor_screen_jpanelLayout);
        super_admin_doctor_screen_jpanelLayout.setHorizontalGroup(
            super_admin_doctor_screen_jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(super_admin_doctor_screen_jpanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        super_admin_doctor_screen_jpanelLayout.setVerticalGroup(
            super_admin_doctor_screen_jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(super_admin_doctor_screen_jpanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(super_admin_doctor_screen_jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tabbedPane.addTab("DOCTOR", super_admin_doctor_screen_jpanel);

        jPanel22.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel23.setMinimumSize(new java.awt.Dimension(550, 350));

        Person_Screen_All_Hospitals_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Person_Screen_All_Hospitals_Table.setMinimumSize(new java.awt.Dimension(300, 100));
        Person_Screen_All_Hospitals_Table.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane9.setViewportView(Person_Screen_All_Hospitals_Table);

        Person_Screen_Table_Label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Person_Screen_Table_Label.setText("ALL HOSPITALS");

        Person_Screen_Search_Button.setBackground(new java.awt.Color(204, 204, 255));
        Person_Screen_Search_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Person_Screen_Search_Button.setText("SEARCH");
        Person_Screen_Search_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Person_Screen_Search_ButtonActionPerformed(evt);
            }
        });

        Person_Screen_Pincode_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Person_Screen_Pincode_Label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Person_Screen_Pincode_Label.setText("PIN CODE");

        Person_Screen_ViewAllButton.setBackground(new java.awt.Color(204, 204, 255));
        Person_Screen_ViewAllButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Person_Screen_ViewAllButton.setText("VIEW ALL");
        Person_Screen_ViewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Person_Screen_ViewAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(Person_Screen_Table_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Person_Screen_Pincode_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Person_Screen_Pincode_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Person_Screen_Search_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Person_Screen_ViewAllButton))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 875, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Person_Screen_Table_Label)
                    .addComponent(Person_Screen_Pincode_TextField)
                    .addComponent(Person_Screen_Search_Button)
                    .addComponent(Person_Screen_Pincode_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Person_Screen_ViewAllButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
        );

        tabbedPane.addTab("SEARCH HOSPITAL", jPanel22);

        jPanel24.setMinimumSize(new java.awt.Dimension(983, 400));

        jLabel81.setText("Select Doctor");

        jLabel88.setText("Hospital Name");

        jLabel87.setText("Patient PIN Code");

        jLabel82.setText("Patient Address");

        jLabel85.setText("Patient Name");

        jLabel9.setText("Patient ID");

        jLabel90.setText("Doctor Id");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9)
                            .addComponent(jLabel81)
                            .addComponent(jLabel82)
                            .addComponent(jLabel87, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel88, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel85)
                            .addComponent(jLabel90))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        Person_Registeration_Screen_SelectDoctorList.setPreferredSize(new java.awt.Dimension(200, 200));
        jScrollPane15.setViewportView(Person_Registeration_Screen_SelectDoctorList);

        Person_Registeration_Screen_ResetButton.setBackground(new java.awt.Color(204, 204, 255));
        Person_Registeration_Screen_ResetButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Person_Registeration_Screen_ResetButton.setText("RESET");
        Person_Registeration_Screen_ResetButton.setMaximumSize(new java.awt.Dimension(84, 30));
        Person_Registeration_Screen_ResetButton.setMinimumSize(new java.awt.Dimension(84, 30));
        Person_Registeration_Screen_ResetButton.setPreferredSize(new java.awt.Dimension(84, 30));
        Person_Registeration_Screen_ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Person_Registeration_Screen_ResetButtonActionPerformed(evt);
            }
        });

        Person_Registeration_Screen_RegisterButton.setBackground(new java.awt.Color(204, 204, 255));
        Person_Registeration_Screen_RegisterButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Person_Registeration_Screen_RegisterButton.setText("REGISTER");
        Person_Registeration_Screen_RegisterButton.setMaximumSize(new java.awt.Dimension(84, 30));
        Person_Registeration_Screen_RegisterButton.setMinimumSize(new java.awt.Dimension(84, 30));
        Person_Registeration_Screen_RegisterButton.setPreferredSize(new java.awt.Dimension(84, 30));
        Person_Registeration_Screen_RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Person_Registeration_Screen_RegisterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdminDashboardScreen_Add_Panel6Layout = new javax.swing.GroupLayout(superAdminDashboardScreen_Add_Panel6);
        superAdminDashboardScreen_Add_Panel6.setLayout(superAdminDashboardScreen_Add_Panel6Layout);
        superAdminDashboardScreen_Add_Panel6Layout.setHorizontalGroup(
            superAdminDashboardScreen_Add_Panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Add_Panel6Layout.createSequentialGroup()
                .addComponent(Person_Registeration_Screen_ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(Person_Registeration_Screen_RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        superAdminDashboardScreen_Add_Panel6Layout.setVerticalGroup(
            superAdminDashboardScreen_Add_Panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Add_Panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(superAdminDashboardScreen_Add_Panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Person_Registeration_Screen_ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Person_Registeration_Screen_RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Person_Registeration_Screen_HospitalId_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_HospitalId_Label.setText("-");

        Person_Registeration_Screen_HospitalNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_HospitalNameLabel.setText("-");

        Person_Registeration_Screen_DepartmentComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_DepartmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adult", "Teen", "Children", "Emergency" }));
        Person_Registeration_Screen_DepartmentComboBox.setMinimumSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_DepartmentComboBox.setPreferredSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_DepartmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Person_Registeration_Screen_DepartmentComboBoxActionPerformed(evt);
            }
        });

        Person_Registeration_Screen_passwordTextField.setText("123");
        Person_Registeration_Screen_passwordTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Person_Registeration_Screen_AddressTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_AddressTextField.setText("Boston");
        Person_Registeration_Screen_AddressTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_AddressTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Person_Registeration_Screen_DoctorId_Label.setText("-");

        Person_Registeration_Screen_idTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_idTextField.setText("123");
        Person_Registeration_Screen_idTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_idTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel83.setText("Patient Phone");

        jLabel86.setText("Hospital Id");

        Person_Registeration_Screen_PhoneTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_PhoneTextField.setText("9999999999");
        Person_Registeration_Screen_PhoneTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_PhoneTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel84.setText("Department");

        Person_Registeration_Screen_PinTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_PinTextField.setText("223232");
        Person_Registeration_Screen_PinTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_PinTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel89.setText("Password");

        Person_Registeration_Screen_nameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Person_Registeration_Screen_nameTextField.setText("ABC");
        Person_Registeration_Screen_nameTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Person_Registeration_Screen_nameTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Person_Registeration_Screen_DoctorId_Label1.setText("Community");

        Person_Registeration_Screen_Community_Label.setText("- ");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(Person_Registeration_Screen_DoctorId_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Person_Registeration_Screen_DoctorId_Label1)
                        .addGap(18, 18, 18)
                        .addComponent(Person_Registeration_Screen_Community_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(superAdminDashboardScreen_Add_Panel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Person_Registeration_Screen_nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Person_Registeration_Screen_idTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Person_Registeration_Screen_HospitalNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Person_Registeration_Screen_PinTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addComponent(jLabel83)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Person_Registeration_Screen_PhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addComponent(jLabel89)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Person_Registeration_Screen_passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel84)
                                    .addComponent(jLabel86))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Person_Registeration_Screen_HospitalId_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(Person_Registeration_Screen_DepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Person_Registeration_Screen_AddressTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Person_Registeration_Screen_passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Person_Registeration_Screen_idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Person_Registeration_Screen_PhoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Person_Registeration_Screen_nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Person_Registeration_Screen_AddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Person_Registeration_Screen_DepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Person_Registeration_Screen_PinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel86)
                    .addComponent(Person_Registeration_Screen_HospitalId_Label)
                    .addComponent(Person_Registeration_Screen_HospitalNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(superAdminDashboardScreen_Add_Panel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Person_Registeration_Screen_DoctorId_Label)
                            .addComponent(Person_Registeration_Screen_DoctorId_Label1)
                            .addComponent(Person_Registeration_Screen_Community_Label)))))
        );

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(90, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        tabbedPane.addTab("REGISTER PATIENT", jPanel24);

        jPanel19.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel20.setMinimumSize(new java.awt.Dimension(550, 350));

        jPanel28.setMinimumSize(new java.awt.Dimension(336, 350));

        jLabel42.setText("Hospital");

        jLabel43.setText("Doctor Name");

        jLabel44.setText("Patient Name");

        jLabel7.setText("Patient ID");

        Patient_Screen_PatientId_TextField.setEditable(false);
        Patient_Screen_PatientId_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Patient_Screen_PatientId_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Patient_Screen_PatientId_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Patient_Screen_PatientPhone_TextField.setEditable(false);
        Patient_Screen_PatientPhone_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Patient_Screen_PatientPhone_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Patient_Screen_PatientPhone_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Patient_Screen_Patient_Name_TextField.setEditable(false);
        Patient_Screen_Patient_Name_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Patient_Screen_Patient_Name_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Patient_Screen_Patient_Name_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel63.setText("Patient Phone");

        Patient_Screen_Hospital_TextField.setEditable(false);
        Patient_Screen_Hospital_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Patient_Screen_Hospital_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Patient_Screen_Hospital_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Patient_Screen_DoctorName_TextField.setEditable(false);
        Patient_Screen_DoctorName_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Patient_Screen_DoctorName_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Patient_Screen_DoctorName_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel28Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Patient_Screen_PatientId_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel42)
                            .addComponent(jLabel63))
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Patient_Screen_PatientPhone_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Patient_Screen_Hospital_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(Patient_Screen_DoctorName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel28Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Patient_Screen_Patient_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patient_Screen_PatientId_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patient_Screen_Patient_Name_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patient_Screen_PatientPhone_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patient_Screen_Hospital_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patient_Screen_DoctorName_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(128, 128, 128))
        );

        jPanel29.setMinimumSize(new java.awt.Dimension(550, 350));

        Patient_Screen_EncounterHistoryTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Patient_Screen_EncounterHistoryTable1.setMinimumSize(new java.awt.Dimension(300, 100));
        Patient_Screen_EncounterHistoryTable1.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane11.setViewportView(Patient_Screen_EncounterHistoryTable1);

        superadmin_Encounters_Screen_TableTitle_Label1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        superadmin_Encounters_Screen_TableTitle_Label1.setText("Encounter History");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_TableTitle_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(superadmin_Encounters_Screen_TableTitle_Label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPane.addTab("ENCOUNTER HISTORY", jPanel19);

        jPanel13.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel14.setMinimumSize(new java.awt.Dimension(550, 350));

        Doctor_Assigned_Patients_Screen_AssignedPatients_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Doctor_Assigned_Patients_Screen_AssignedPatients_Table.setMinimumSize(new java.awt.Dimension(300, 100));
        Doctor_Assigned_Patients_Screen_AssignedPatients_Table.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane5.setViewportView(Doctor_Assigned_Patients_Screen_AssignedPatients_Table);

        Doctor_Assigned_Patients_Screen_Table_Title_Label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Doctor_Assigned_Patients_Screen_Table_Title_Label.setText("Assigned Patients");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Doctor_Assigned_Patients_Screen_Table_Title_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Doctor_Assigned_Patients_Screen_Table_Title_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(301, Short.MAX_VALUE))
        );

        tabbedPane.addTab("ASSIGNED PATIENTS", jPanel13);

        jPanel40.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel41.setPreferredSize(new java.awt.Dimension(986, 550));

        jPanel43.setMinimumSize(new java.awt.Dimension(336, 350));

        jLabel48.setText("Name");

        jLabel13.setText("Patient ID");

        jLabel49.setText("Department");

        jLabel64.setText("Phone");

        jLabel65.setText("Hospital");

        jLabel66.setText("Password");

        jLabel67.setText("Hospital ID");

        jLabel72.setText("Doctor ID");

        jLabel73.setText("Select Doctor");

        jLabel68.setText("Address");

        jLabel69.setText("Pin Code");

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel13)
                    .addComponent(jLabel64)
                    .addComponent(jLabel66)
                    .addComponent(jLabel68)
                    .addComponent(jLabel69)
                    .addComponent(jLabel65)
                    .addComponent(jLabel49)
                    .addComponent(jLabel72)
                    .addComponent(jLabel67)
                    .addComponent(jLabel73))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        jPanel45.setPreferredSize(new java.awt.Dimension(226, 520));

        Hospital_Admin_Add_PatientScreen_Id_Textfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Id_Textfield.setText("D1");
        Hospital_Admin_Add_PatientScreen_Id_Textfield.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen_Id_Textfield.setPreferredSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen_Id_Textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Admin_Add_PatientScreen_Id_TextfieldActionPerformed(evt);
            }
        });

        Hospital_Admin_Add_PatientScreen_Phone_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Phone_TextField.setText("4");
        Hospital_Admin_Add_PatientScreen_Phone_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen_Phone_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Admin_Add_PatientScreen__TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen__TextField.setText("Dr. TC");
        Hospital_Admin_Add_PatientScreen__TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen__TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Admin_Add_PatientScreen_ComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adult", "Teen", "Children", "Emergency" }));
        Hospital_Admin_Add_PatientScreen_ComboBox.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen_ComboBox.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Admin_Add_PatientScreen_Textfield.setText("123");
        Hospital_Admin_Add_PatientScreen_Textfield.setPreferredSize(new java.awt.Dimension(203, 26));

        jScrollPane6.setViewportView(Hospital_Admin_Add_PatientScreen_DoctorList);

        Hospital_Admin_Add_PatientScreen_HospitalNameTextField.setText("-");

        Hospital_Admin_Add_PatientScreen_HospitaIdTextField.setText("-");

        Hospital_Admin_Add_PatientScreen_DoctorIDTextField.setText("-");

        Hospital_Admin_Add_PatientScreen_Address_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Address_TextField.setText("4");
        Hospital_Admin_Add_PatientScreen_Address_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen_Address_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Admin_Add_PatientScreen_Pincode_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Pincode_TextField.setText("4");
        Hospital_Admin_Add_PatientScreen_Pincode_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Admin_Add_PatientScreen_Pincode_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Admin_Add_PatientScreen_AddButton.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Admin_Add_PatientScreen_AddButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_AddButton.setText("ADD");
        Hospital_Admin_Add_PatientScreen_AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Admin_Add_PatientScreen_AddButtonActionPerformed(evt);
            }
        });

        Hospital_Screen_AddPatients_Tab_ResetButton.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Screen_AddPatients_Tab_ResetButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Screen_AddPatients_Tab_ResetButton.setText("RESET");
        Hospital_Screen_AddPatients_Tab_ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_AddPatients_Tab_ResetButtonActionPerformed(evt);
            }
        });

        Hospital_Patient_Screen_DeleteButton.setBackground(new java.awt.Color(255, 102, 102));
        Hospital_Patient_Screen_DeleteButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Hospital_Patient_Screen_DeleteButton.setText("DELETE");
        Hospital_Patient_Screen_DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Patient_Screen_DeleteButtonActionPerformed(evt);
            }
        });

        Hospital_Patient_Screen_UpdateButton.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Patient_Screen_UpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Hospital_Patient_Screen_UpdateButton.setText("UPDATE");
        Hospital_Patient_Screen_UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Patient_Screen_UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout = new javax.swing.GroupLayout(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel);
        Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel.setLayout(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout);
        Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.setHorizontalGroup(
            Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.createSequentialGroup()
                .addComponent(Hospital_Patient_Screen_DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Hospital_Patient_Screen_UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.setVerticalGroup(
            Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hospital_Patient_Screen_DeleteButton)
                    .addComponent(Hospital_Patient_Screen_UpdateButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout superAdminDashboardScreen_Add_Panel10Layout = new javax.swing.GroupLayout(superAdminDashboardScreen_Add_Panel10);
        superAdminDashboardScreen_Add_Panel10.setLayout(superAdminDashboardScreen_Add_Panel10Layout);
        superAdminDashboardScreen_Add_Panel10Layout.setHorizontalGroup(
            superAdminDashboardScreen_Add_Panel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Add_Panel10Layout.createSequentialGroup()
                .addGroup(superAdminDashboardScreen_Add_Panel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(superAdminDashboardScreen_Add_Panel10Layout.createSequentialGroup()
                        .addComponent(Hospital_Screen_AddPatients_Tab_ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Hospital_Admin_Add_PatientScreen_AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        superAdminDashboardScreen_Add_Panel10Layout.setVerticalGroup(
            superAdminDashboardScreen_Add_Panel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Add_Panel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(superAdminDashboardScreen_Add_Panel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hospital_Admin_Add_PatientScreen_AddButton)
                    .addComponent(Hospital_Screen_AddPatients_Tab_ResetButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel45Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(Hospital_Admin_Add_PatientScreen_Id_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel45Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Hospital_Admin_Add_PatientScreen_Phone_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel45Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Hospital_Admin_Add_PatientScreen__TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel45Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Hospital_Admin_Add_PatientScreen_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel45Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Hospital_Admin_Add_PatientScreen_DoctorIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hospital_Admin_Add_PatientScreen_Address_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hospital_Admin_Add_PatientScreen_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hospital_Admin_Add_PatientScreen_HospitalNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hospital_Admin_Add_PatientScreen_HospitaIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hospital_Admin_Add_PatientScreen_Pincode_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel45Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(superAdminDashboardScreen_Add_Panel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Hospital_Admin_Add_PatientScreen_Id_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen__TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_Phone_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_Address_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_Pincode_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_HospitalNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Admin_Add_PatientScreen_HospitaIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Hospital_Admin_Add_PatientScreen_DoctorIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(superAdminDashboardScreen_Add_Panel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel46.setMinimumSize(new java.awt.Dimension(550, 350));

        Hospital_Admin_Add_PatientScreen_All_Patients_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Hospital_Admin_Add_PatientScreen_All_Patients_Table.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane14.setViewportView(Hospital_Admin_Add_PatientScreen_All_Patients_Table);

        Hospital_Admin_Add_PatientScreen_Table_Label2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Table_Label2.setText("All Patients");

        Hospital_Admin_Add_PatientScreen_Button.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Admin_Add_PatientScreen_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Button.setText("GET");
        Hospital_Admin_Add_PatientScreen_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Admin_Add_PatientScreen_ButtonActionPerformed(evt);
            }
        });

        Hospital_Admin_Add_PatientScreen_TextField2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Hospital_Admin_Add_PatientScreen_Label2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Hospital_Admin_Add_PatientScreen_Label2.setText("Patient ID");

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel46Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel46Layout.createSequentialGroup()
                        .addComponent(Hospital_Admin_Add_PatientScreen_Table_Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Hospital_Admin_Add_PatientScreen_Label2)
                        .addGap(18, 18, 18)
                        .addComponent(Hospital_Admin_Add_PatientScreen_TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Hospital_Admin_Add_PatientScreen_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel46Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hospital_Admin_Add_PatientScreen_Table_Label2)
                    .addComponent(Hospital_Admin_Add_PatientScreen_TextField2)
                    .addComponent(Hospital_Admin_Add_PatientScreen_Button)
                    .addComponent(Hospital_Admin_Add_PatientScreen_Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        tabbedPane.addTab("ADD PATIENT", jPanel40);

        jPanel10.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel11.setMinimumSize(new java.awt.Dimension(550, 350));

        superadmin_Encounters_Screen_EncounterHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        superadmin_Encounters_Screen_EncounterHistoryTable.setMinimumSize(new java.awt.Dimension(300, 100));
        superadmin_Encounters_Screen_EncounterHistoryTable.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane4.setViewportView(superadmin_Encounters_Screen_EncounterHistoryTable);

        superadmin_Encounters_Screen_TableTitle_Label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        superadmin_Encounters_Screen_TableTitle_Label.setText("Encounter History");

        superadmin_Encounters_Screen_GetButton.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Encounters_Screen_GetButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Encounters_Screen_GetButton.setText("GET");
        superadmin_Encounters_Screen_GetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Encounters_Screen_GetButtonActionPerformed(evt);
            }
        });

        superadmin_Encounters_Screen_SearchPatientID_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_SearchPatientID_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Encounters_Screen_SearchPatientID_TextFieldActionPerformed(evt);
            }
        });

        superadmin_Encounters_Screen_SearchLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        superadmin_Encounters_Screen_SearchLabel.setText("Patient ID");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(superadmin_Encounters_Screen_TableTitle_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(superadmin_Encounters_Screen_SearchLabel)
                        .addGap(18, 18, 18)
                        .addComponent(superadmin_Encounters_Screen_SearchPatientID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(superadmin_Encounters_Screen_GetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superadmin_Encounters_Screen_TableTitle_Label)
                    .addComponent(superadmin_Encounters_Screen_SearchPatientID_TextField)
                    .addComponent(superadmin_Encounters_Screen_GetButton)
                    .addComponent(superadmin_Encounters_Screen_SearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jPanel12.setMinimumSize(new java.awt.Dimension(336, 350));

        jLabel36.setText("Temperature");

        jLabel37.setText("Hospital");

        superadmin_Encounters_Screen_Add_Button.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Encounters_Screen_Add_Button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Encounters_Screen_Add_Button.setText("ADD");
        superadmin_Encounters_Screen_Add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Encounters_Screen_Add_ButtonActionPerformed(evt);
            }
        });

        superAdminDashboardScreenAdd_Details_Reset_Button6.setBackground(new java.awt.Color(204, 204, 255));
        superAdminDashboardScreenAdd_Details_Reset_Button6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superAdminDashboardScreenAdd_Details_Reset_Button6.setText("RESET");
        superAdminDashboardScreenAdd_Details_Reset_Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superAdminDashboardScreenAdd_Details_Reset_Button6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdminDashboardScreen_Add_Panel5Layout = new javax.swing.GroupLayout(superAdminDashboardScreen_Add_Panel5);
        superAdminDashboardScreen_Add_Panel5.setLayout(superAdminDashboardScreen_Add_Panel5Layout);
        superAdminDashboardScreen_Add_Panel5Layout.setHorizontalGroup(
            superAdminDashboardScreen_Add_Panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, superAdminDashboardScreen_Add_Panel5Layout.createSequentialGroup()
                .addComponent(superAdminDashboardScreenAdd_Details_Reset_Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(superadmin_Encounters_Screen_Add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        superAdminDashboardScreen_Add_Panel5Layout.setVerticalGroup(
            superAdminDashboardScreen_Add_Panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Add_Panel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(superAdminDashboardScreen_Add_Panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superadmin_Encounters_Screen_Add_Button)
                    .addComponent(superAdminDashboardScreenAdd_Details_Reset_Button6)))
        );

        jLabel38.setText("Doctor");

        jLabel39.setText("Patient Name");

        jLabel4.setText("Patient ID");

        superadmin_Encounters_Screen_patientIdTextField.setEditable(false);
        superadmin_Encounters_Screen_patientIdTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_patientIdTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_patientIdTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Encounters_Screen_PatientPhoneTextField.setEditable(false);
        superadmin_Encounters_Screen_PatientPhoneTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_PatientPhoneTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_PatientPhoneTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Encounters_Screen_PatientNameTextField.setEditable(false);
        superadmin_Encounters_Screen_PatientNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_PatientNameTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_PatientNameTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel40.setText("Patient Phone");

        superadmin_Encounters_Screen_Patient_Hospital_TextField.setEditable(false);
        superadmin_Encounters_Screen_Patient_Hospital_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_Patient_Hospital_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_Patient_Hospital_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Encounters_Screen_Doctor_Name_TextField.setEditable(false);
        superadmin_Encounters_Screen_Doctor_Name_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_Doctor_Name_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_Doctor_Name_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Encounters_Screen_TemperatureTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_TemperatureTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_TemperatureTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel59.setText("Blood Pressure");

        superadmin_Encounters_Screen_BloodPressure_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_BloodPressure_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_BloodPressure_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Encounters_Screen_Patient_HospitalId_TextField.setEditable(false);
        superadmin_Encounters_Screen_Patient_HospitalId_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Encounters_Screen_Patient_HospitalId_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Encounters_Screen_Patient_HospitalId_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jLabel45.setText("Hospital ID");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(superAdminDashboardScreen_Add_Panel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel59)
                            .addComponent(jLabel36)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(superadmin_Encounters_Screen_patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel38)
                                        .addComponent(jLabel37)
                                        .addComponent(jLabel40))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(superadmin_Encounters_Screen_Patient_HospitalId_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(superadmin_Encounters_Screen_PatientPhoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(superadmin_Encounters_Screen_Patient_Hospital_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(superadmin_Encounters_Screen_Doctor_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(superadmin_Encounters_Screen_TemperatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(superadmin_Encounters_Screen_BloodPressure_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                                    .addComponent(jLabel39)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(superadmin_Encounters_Screen_PatientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel45))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_PatientNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_PatientPhoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_Patient_Hospital_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_Patient_HospitalId_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_Doctor_Name_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Encounters_Screen_TemperatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superadmin_Encounters_Screen_BloodPressure_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superAdminDashboardScreen_Add_Panel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPane.addTab("ENCOUNTERS", jPanel10);

        jPanel15.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel21.setMinimumSize(new java.awt.Dimension(550, 350));

        Approve_Patients_Screen_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Approve_Patients_Screen_Table.setMinimumSize(new java.awt.Dimension(300, 100));
        Approve_Patients_Screen_Table.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane8.setViewportView(Approve_Patients_Screen_Table);

        Approve_Patients_Screen_Table_Title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Approve_Patients_Screen_Table_Title.setText("New Persons");

        Approve_Patients_Screen_ApproveButton.setBackground(new java.awt.Color(153, 255, 153));
        Approve_Patients_Screen_ApproveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Approve_Patients_Screen_ApproveButton.setText("APPROVE");
        Approve_Patients_Screen_ApproveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Approve_Patients_Screen_ApproveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(Approve_Patients_Screen_Table_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(320, 320, 320)
                        .addComponent(Approve_Patients_Screen_ApproveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Approve_Patients_Screen_Table_Title)
                    .addComponent(Approve_Patients_Screen_ApproveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
        );

        tabbedPane.addTab("APPROVE PATIENTS", jPanel15);

        super_admin_doctor_screen_jpanel1.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel34.setMinimumSize(new java.awt.Dimension(550, 350));

        Hospital_Screen_Add_Doctor_AllDoctorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Hospital_Screen_Add_Doctor_AllDoctorsTable.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane7.setViewportView(Hospital_Screen_Add_Doctor_AllDoctorsTable);

        Hospital_Screen_Add_Doctor_Table_Title_Label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Hospital_Screen_Add_Doctor_Table_Title_Label.setText("All Doctors");

        Hospital_Screen_Add_Doctor_GetButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_GetButton.setText("GET");
        Hospital_Screen_Add_Doctor_GetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_Add_Doctor_GetButtonActionPerformed(evt);
            }
        });

        Hospital_Screen_Add_Doctor_SearchDoctorId_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Hospital_Screen_Add_Doctor_Search_Label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Hospital_Screen_Add_Doctor_Search_Label.setText("Doctor ID");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(Hospital_Screen_Add_Doctor_Table_Title_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Hospital_Screen_Add_Doctor_Search_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Hospital_Screen_Add_Doctor_SearchDoctorId_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Hospital_Screen_Add_Doctor_GetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hospital_Screen_Add_Doctor_Table_Title_Label)
                    .addComponent(Hospital_Screen_Add_Doctor_SearchDoctorId_TextField)
                    .addComponent(Hospital_Screen_Add_Doctor_GetButton)
                    .addComponent(Hospital_Screen_Add_Doctor_Search_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel37.setMinimumSize(new java.awt.Dimension(336, 350));

        jLabel28.setText("Doctor Name");

        jLabel11.setText("Doctor ID");

        jLabel41.setText("Department");

        jLabel55.setText("Doctor Phone");

        jLabel56.setText("Hospital");

        jLabel60.setText("Password");

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel56)
                    .addComponent(jLabel41)
                    .addComponent(jLabel28)
                    .addComponent(jLabel11)
                    .addComponent(jLabel55)
                    .addComponent(jLabel60))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 78, Short.MAX_VALUE))
        );

        Hospital_Screen_Add_Doctor_Id_Textfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_Id_Textfield.setText("D1");
        Hospital_Screen_Add_Doctor_Id_Textfield.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Screen_Add_Doctor_Id_Textfield.setPreferredSize(new java.awt.Dimension(203, 26));
        Hospital_Screen_Add_Doctor_Id_Textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_Add_Doctor_Id_TextfieldActionPerformed(evt);
            }
        });

        Hospital_Screen_Add_Doctor_Phone_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_Phone_TextField.setText("4");
        Hospital_Screen_Add_Doctor_Phone_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Screen_Add_Doctor_Phone_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Screen_Add_Doctor_NameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_NameTextField.setText("Dr. TC");
        Hospital_Screen_Add_Doctor_NameTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Screen_Add_Doctor_NameTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Screen_Add_Doctor_UpdateButton.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Screen_Add_Doctor_UpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_UpdateButton.setText("UPDATE");
        Hospital_Screen_Add_Doctor_UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_Add_Doctor_UpdateButtonActionPerformed(evt);
            }
        });

        Hospital_Screen_Add_Doctor_DeleteButton.setBackground(new java.awt.Color(255, 102, 102));
        Hospital_Screen_Add_Doctor_DeleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_DeleteButton.setText("DELETE");
        Hospital_Screen_Add_Doctor_DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_Add_Doctor_DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hospital_screen_delete_update_panelLayout = new javax.swing.GroupLayout(hospital_screen_delete_update_panel);
        hospital_screen_delete_update_panel.setLayout(hospital_screen_delete_update_panelLayout);
        hospital_screen_delete_update_panelLayout.setHorizontalGroup(
            hospital_screen_delete_update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_screen_delete_update_panelLayout.createSequentialGroup()
                .addComponent(Hospital_Screen_Add_Doctor_DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Hospital_Screen_Add_Doctor_UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        hospital_screen_delete_update_panelLayout.setVerticalGroup(
            hospital_screen_delete_update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospital_screen_delete_update_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hospital_screen_delete_update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hospital_screen_delete_update_panelLayout.createSequentialGroup()
                        .addComponent(Hospital_Screen_Add_Doctor_DeleteButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Hospital_Screen_Add_Doctor_UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Hospital_Screen_Add_Doctor_AddButton.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Screen_Add_Doctor_AddButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_AddButton.setText("ADD");
        Hospital_Screen_Add_Doctor_AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_Add_Doctor_AddButtonActionPerformed(evt);
            }
        });

        Hospital_Screen_Add_Doctor_ResetButton.setBackground(new java.awt.Color(204, 204, 255));
        Hospital_Screen_Add_Doctor_ResetButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_ResetButton.setText("RESET");
        Hospital_Screen_Add_Doctor_ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hospital_Screen_Add_Doctor_ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdminDashboardScreen_Add_Panel8Layout = new javax.swing.GroupLayout(superAdminDashboardScreen_Add_Panel8);
        superAdminDashboardScreen_Add_Panel8.setLayout(superAdminDashboardScreen_Add_Panel8Layout);
        superAdminDashboardScreen_Add_Panel8Layout.setHorizontalGroup(
            superAdminDashboardScreen_Add_Panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, superAdminDashboardScreen_Add_Panel8Layout.createSequentialGroup()
                .addComponent(Hospital_Screen_Add_Doctor_ResetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Hospital_Screen_Add_Doctor_AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        superAdminDashboardScreen_Add_Panel8Layout.setVerticalGroup(
            superAdminDashboardScreen_Add_Panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Add_Panel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(superAdminDashboardScreen_Add_Panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hospital_Screen_Add_Doctor_AddButton)
                    .addComponent(Hospital_Screen_Add_Doctor_ResetButton)))
        );

        Hospital_Screen_Add_Doctor_DepartmentComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Hospital_Screen_Add_Doctor_DepartmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adult", "Teen", "Children", "Emergency" }));
        Hospital_Screen_Add_Doctor_DepartmentComboBox.setMinimumSize(new java.awt.Dimension(203, 26));
        Hospital_Screen_Add_Doctor_DepartmentComboBox.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Screen_Add_Doctor_Password_TextField.setText("123");
        Hospital_Screen_Add_Doctor_Password_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        Hospital_Screen_Add_Doctor_Hospital_Name_Label.setText("-");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(Hospital_Screen_Add_Doctor_Id_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Hospital_Screen_Add_Doctor_Phone_TextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Hospital_Screen_Add_Doctor_DepartmentComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Hospital_Screen_Add_Doctor_NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Hospital_Screen_Add_Doctor_Password_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Hospital_Screen_Add_Doctor_Hospital_Name_Label)))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addComponent(superAdminDashboardScreen_Add_Panel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hospital_screen_delete_update_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Hospital_Screen_Add_Doctor_Id_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Screen_Add_Doctor_Password_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(Hospital_Screen_Add_Doctor_NameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Screen_Add_Doctor_Phone_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Screen_Add_Doctor_DepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hospital_Screen_Add_Doctor_Hospital_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superAdminDashboardScreen_Add_Panel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hospital_screen_delete_update_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout super_admin_doctor_screen_jpanel1Layout = new javax.swing.GroupLayout(super_admin_doctor_screen_jpanel1);
        super_admin_doctor_screen_jpanel1.setLayout(super_admin_doctor_screen_jpanel1Layout);
        super_admin_doctor_screen_jpanel1Layout.setHorizontalGroup(
            super_admin_doctor_screen_jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(super_admin_doctor_screen_jpanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        super_admin_doctor_screen_jpanel1Layout.setVerticalGroup(
            super_admin_doctor_screen_jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(super_admin_doctor_screen_jpanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(super_admin_doctor_screen_jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(259, Short.MAX_VALUE))
        );

        tabbedPane.addTab("ADD DOCTOR", super_admin_doctor_screen_jpanel1);

        jPanel7.setMinimumSize(new java.awt.Dimension(983, 400));

        jPanel8.setMinimumSize(new java.awt.Dimension(550, 350));

        superadmin_Patient_Screen_AllPatients_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        superadmin_Patient_Screen_AllPatients_Table.setMinimumSize(new java.awt.Dimension(300, 100));
        superadmin_Patient_Screen_AllPatients_Table.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane3.setViewportView(superadmin_Patient_Screen_AllPatients_Table);

        superadmin_Patient_Screen_TableTitle_Label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        superadmin_Patient_Screen_TableTitle_Label.setText("Patients");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(superadmin_Patient_Screen_TableTitle_Label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(superadmin_Patient_Screen_TableTitle_Label)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel29.setText("Select Doctor");

        jLabel30.setText("Patient Address");

        jLabel33.setText("Patient Phone");

        jLabel31.setText("Department");

        jLabel32.setText("Patient Name");

        jLabel3.setText("Patient ID");

        jLabel47.setText("Select Hospital");

        jLabel57.setText("Patient PIN Code");

        superadmin_Patient_Screen_ResetButton.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Patient_Screen_ResetButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Patient_Screen_ResetButton.setText("RESET");
        superadmin_Patient_Screen_ResetButton.setMaximumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_ResetButton.setMinimumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_ResetButton.setPreferredSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Patient_Screen_ResetButtonActionPerformed(evt);
            }
        });

        superadmin_Patient_Screen_AddButton.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Patient_Screen_AddButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Patient_Screen_AddButton.setText("ADD");
        superadmin_Patient_Screen_AddButton.setMaximumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_AddButton.setMinimumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_AddButton.setPreferredSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Patient_Screen_AddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superadmin_add_patient_screen_reset_add_panelLayout = new javax.swing.GroupLayout(superadmin_add_patient_screen_reset_add_panel);
        superadmin_add_patient_screen_reset_add_panel.setLayout(superadmin_add_patient_screen_reset_add_panelLayout);
        superadmin_add_patient_screen_reset_add_panelLayout.setHorizontalGroup(
            superadmin_add_patient_screen_reset_add_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superadmin_add_patient_screen_reset_add_panelLayout.createSequentialGroup()
                .addComponent(superadmin_Patient_Screen_ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(superadmin_Patient_Screen_AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        superadmin_add_patient_screen_reset_add_panelLayout.setVerticalGroup(
            superadmin_add_patient_screen_reset_add_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superadmin_add_patient_screen_reset_add_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(superadmin_add_patient_screen_reset_add_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superadmin_Patient_Screen_ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superadmin_Patient_Screen_AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane10.setViewportView(superadmin_Patient_Screen_Select_HospitalList);

        superadmin_Patient_Screen_Patient_DepartmentComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Patient_Screen_Patient_DepartmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adult", "Teen", "Children", "Emergency" }));
        superadmin_Patient_Screen_Patient_DepartmentComboBox.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Patient_Screen_Patient_DepartmentComboBox.setPreferredSize(new java.awt.Dimension(203, 26));
        superadmin_Patient_Screen_Patient_DepartmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Patient_Screen_Patient_DepartmentComboBoxActionPerformed(evt);
            }
        });

        superadmin_Patient_Screen_Patient_Address_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Patient_Screen_Patient_Address_TextField.setText("Boston");
        superadmin_Patient_Screen_Patient_Address_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Patient_Screen_Patient_Address_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Patients_Screen_patientId_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Patients_Screen_patientId_TextField.setText("123");
        superadmin_Patients_Screen_patientId_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Patients_Screen_patientId_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Patient_Screen_PatientPhone_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Patient_Screen_PatientPhone_TextField.setText("9999999999");
        superadmin_Patient_Screen_PatientPhone_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Patient_Screen_PatientPhone_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Patient_Screen_Patient_Pin_TextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Patient_Screen_Patient_Pin_TextField.setText("223232");
        superadmin_Patient_Screen_Patient_Pin_TextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Patient_Screen_Patient_Pin_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        superadmin_Patient_Screen_PatientNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        superadmin_Patient_Screen_PatientNameTextField.setText("ABC");
        superadmin_Patient_Screen_PatientNameTextField.setMinimumSize(new java.awt.Dimension(203, 26));
        superadmin_Patient_Screen_PatientNameTextField.setPreferredSize(new java.awt.Dimension(203, 26));

        jScrollPane13.setViewportView(superadmin_Patient_Screen_Select_DoctorList);

        superadmin_Patients_Screen_password_TextField.setText("123");
        superadmin_Patients_Screen_password_TextField.setPreferredSize(new java.awt.Dimension(203, 26));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(superadmin_add_patient_screen_reset_add_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patients_Screen_password_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patients_Screen_patientId_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patient_Screen_PatientNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patient_Screen_PatientPhone_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patient_Screen_Patient_Address_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patient_Screen_Patient_Pin_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(superadmin_Patient_Screen_Patient_DepartmentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(superadmin_Patients_Screen_patientId_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Patients_Screen_password_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Patient_Screen_PatientNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Patient_Screen_PatientPhone_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Patient_Screen_Patient_Address_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Patient_Screen_Patient_Pin_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_Patient_Screen_Patient_DepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_add_patient_screen_reset_add_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        superadmin_Patient_Screen_UpdateButton.setBackground(new java.awt.Color(204, 204, 255));
        superadmin_Patient_Screen_UpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Patient_Screen_UpdateButton.setText("UPDATE");
        superadmin_Patient_Screen_UpdateButton.setMaximumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_UpdateButton.setMinimumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_UpdateButton.setPreferredSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Patient_Screen_UpdateButtonActionPerformed(evt);
            }
        });

        superadmin_Patient_Screen_DeleteButton.setBackground(new java.awt.Color(255, 102, 102));
        superadmin_Patient_Screen_DeleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        superadmin_Patient_Screen_DeleteButton.setText("DELETE");
        superadmin_Patient_Screen_DeleteButton.setMaximumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_DeleteButton.setMinimumSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_DeleteButton.setPreferredSize(new java.awt.Dimension(84, 30));
        superadmin_Patient_Screen_DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superadmin_Patient_Screen_DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout superAdminDashboardScreen_Update_Panel4Layout = new javax.swing.GroupLayout(superAdminDashboardScreen_Update_Panel4);
        superAdminDashboardScreen_Update_Panel4.setLayout(superAdminDashboardScreen_Update_Panel4Layout);
        superAdminDashboardScreen_Update_Panel4Layout.setHorizontalGroup(
            superAdminDashboardScreen_Update_Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, superAdminDashboardScreen_Update_Panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(superadmin_Patient_Screen_DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(superadmin_Patient_Screen_UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        superAdminDashboardScreen_Update_Panel4Layout.setVerticalGroup(
            superAdminDashboardScreen_Update_Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(superAdminDashboardScreen_Update_Panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(superAdminDashboardScreen_Update_Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superadmin_Patient_Screen_UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(superadmin_Patient_Screen_DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel10.setText("Password");

        jLabel5.setText("Patient ID");

        superadmin_patient_patientId_label.setText("-");

        jLabel6.setText("Hospital ID");

        superadmin_patient_patientId_label1.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel3)
                    .addComponent(jLabel31)
                    .addComponent(jLabel29)
                    .addComponent(jLabel57)
                    .addComponent(jLabel47)
                    .addComponent(jLabel10)
                    .addComponent(jLabel5)
                    .addComponent(superadmin_patient_patientId_label)
                    .addComponent(jLabel6)
                    .addComponent(superadmin_patient_patientId_label1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(superAdminDashboardScreen_Update_Panel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superAdminDashboardScreen_Update_Panel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_patient_patientId_label)
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(superadmin_patient_patientId_label1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPane.addTab("PATIENT", jPanel7);

        MainExitButton.setBackground(new java.awt.Color(204, 204, 204));
        MainExitButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MainExitButton.setText("EXIT");
        MainExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainExitButtonActionPerformed(evt);
            }
        });

        MainLogoutButton.setBackground(new java.awt.Color(255, 102, 102));
        MainLogoutButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MainLogoutButton.setText("LOGOUT");
        MainLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainLogoutButtonActionPerformed(evt);
            }
        });

        MainLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        MainLabel.setForeground(new java.awt.Color(0, 51, 204));
        MainLabel.setText("HOSPITAL MANAGEMENT SYSTEM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainLabel)
                .addGap(167, 167, 167)
                .addComponent(MainLogoutButton)
                .addGap(18, 18, 18)
                .addComponent(MainExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MainExitButton)
                    .addComponent(MainLogoutButton)
                    .addComponent(MainLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hospital_Screen_delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospital_Screen_delete_buttonActionPerformed
        // TODO add your handling code here:
        if (HOSPITAL_INDEX_TO_UPDATE_DELETE != -1)
        {
            DataStorageClass.hospital_Screen_HospitalArrayList.remove(HOSPITAL_INDEX_TO_UPDATE_DELETE);
            initSuperUserAddHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
            HOSPITAL_INDEX_TO_UPDATE_DELETE = -1;
        }
        else {
            JOptionPane.showMessageDialog(null, "Please Select A Valid Hospital");
        }
    }//GEN-LAST:event_hospital_Screen_delete_buttonActionPerformed

    private void hospital_Screen_update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospital_Screen_update_buttonActionPerformed

if(validatehospitalfields()){
        // TODO add your handling code here:
                if (HOSPITAL_INDEX_TO_UPDATE_DELETE != -1)
        {
            Hospital hospital = new Hospital();
            hospital.setHospitalUUID(DataStorageClass.generateUUID());
            hospital.setHospitalID(hospital_Screen_HospitalIdTextField.getText().trim());
            hospital.setHospitalName(hospital_Screen_hospitalNameTextField.getText().trim());
            hospital.setHospitalAddress(hospital_Screen_hospitalAddressTextField.getText().trim());
            hospital.setHospitalPincode(Integer.parseInt(hospital_Screen_hospitalPincodeTextField.getText().trim()));
            hospital.setHospitalCity(hospital_Screen_hospitalCityTextField.getText().trim());
            hospital.setHospitalCommunity(hospital_Screen_hospitalCommunityComboBox.getSelectedItem().toString().trim());
            hospital.setAdminpassword(new String(hospital_Screen_password_TextField.getPassword()).trim());
        
            DataStorageClass.hospital_Screen_HospitalArrayList.set(HOSPITAL_INDEX_TO_UPDATE_DELETE, hospital);
            initSuperUserAddHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
            HOSPITAL_INDEX_TO_UPDATE_DELETE = -1;
            
            
        }
        else {
            JOptionPane.showMessageDialog(null, "Please Select A Valid Hospital");
        }
    }//GEN-LAST:event_hospital_Screen_update_buttonActionPerformed
else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    
    private void superAdminDashboardScreenAdd_Details_Reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superAdminDashboardScreenAdd_Details_Reset_ButtonActionPerformed
        // TODO add your handling code here:
        initSuperUserAddHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_superAdminDashboardScreenAdd_Details_Reset_ButtonActionPerformed

    private void superadmin_Patient_Screen_GetPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Patient_Screen_GetPatientButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_superadmin_Patient_Screen_GetPatientButtonActionPerformed

    private void superadmin_Patient_Screen_ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Patient_Screen_ResetButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_superadmin_Patient_Screen_ResetButtonActionPerformed

    private void superadmin_Patient_Screen_UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Patient_Screen_UpdateButtonActionPerformed


if(checksuperadminpatientfields()){
        // TODO add your handling code here:
        int selectedHospitalIndex = superadmin_Patient_Screen_Select_HospitalList.getSelectedIndex();
        int selectedDoctorIndex = superadmin_Patient_Screen_Select_DoctorList.getSelectedIndex();
        Patient patient = new Patient();
        patient.setPatientUUID(DataStorageClass.generateUUID());
        patient.setPatientId(superadmin_Patients_Screen_patientId_TextField.getText().trim());
        patient.setPatientName(superadmin_Patient_Screen_PatientNameTextField.getText().trim());
        patient.setPatientPhone(superadmin_Patient_Screen_PatientPhone_TextField.getText().trim());
        patient.setPatientAddress(superadmin_Patient_Screen_Patient_Address_TextField.getText().trim());
        patient.setPatientPincode(superadmin_Patient_Screen_Patient_Pin_TextField.getText().trim());
        patient.setPassword(new String(superadmin_Patients_Screen_password_TextField.getPassword()).trim());
        patient.setPatientHospitalID(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalID());
        patient.setHospitalUUID(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalUUID());
        patient.setPatientHospitalName(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalName());
        patient.setPatientDepartment(superadmin_Patient_Screen_Patient_DepartmentComboBox.getSelectedItem().toString());
        patient.setDoctorId(doctorsinhospital.get(selectedDoctorIndex).getDoctorId());
        patient.setdoctorName(doctorsinhospital.get(selectedDoctorIndex).getDoctorName());
        patient.setDoctorUUID(doctorsinhospital.get(selectedDoctorIndex).getDoctorName());
        
        
        
        ArrayList<Patient> patientsArraylist = new ArrayList<>();
         if (USER_ROLE.equals("SUPER_ADMIN")){
                 patientsArraylist =  DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getEnrolledPatientsArrayList();

         }
         else  if (USER_ROLE.equals("COMMUNITY_ADMIN")){
         
         patientsArraylist =  DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndexAccordingToHospitalID(filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedDoctorIndex).getHospitalID())).getEnrolledPatientsArrayList();

         }
         
         
        
        for (int i = 0; i < patientsArraylist.size(); i++)
        {
            if (patientsArraylist.get(i).getPatientId().equals(superadmin_patient_patientId_label.getText().trim()))
            {
            DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getEnrolledPatientsArrayList().set(i, patient);
            PATIENT_UPDATED = true;
                System.out.println("\n id is " + DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getEnrolledPatientsArrayList().get(i).getPatientId());
            i = patientsArraylist.size();
            }
            
        }
        
        
           if (PATIENT_UPDATED)
        {
            JOptionPane.showMessageDialog(null, "Patient Updated.");
            PATIENT_UPDATED = false;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Patient NOT Updated. Please select the same hospital which you want to update the Patient");
        }
           
           
//        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getEnrolledPatientsArrayList().add(patient);
        initSuperUserAddPatientScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
//        System.out.println("selected doctor id " + doctorsinhospital.get(selectedDoctorIndex).getDoctorId() + " name " + doctorsinhospital.get(selectedDoctorIndex).getDoctorName());
    }//GEN-LAST:event_superadmin_Patient_Screen_UpdateButtonActionPerformed


else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void superadmin_Patient_Screen_DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Patient_Screen_DeleteButtonActionPerformed
        // TODO add your handling code here:
       int patientlistindex = superadmin_Patient_Screen_AllPatients_Table.getSelectedRow();
    String selectedHospitalid = superadmin_patient_patientId_label1.getText().trim();
    String selectedPatientid = superadmin_patient_patientId_label.getText().trim();
    
    for(int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
    {
    if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID().equals(selectedHospitalid))
    {
        DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().remove(patientlistindex);
        initSuperUserAddPatientScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
        i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
    }
    }
    
    }//GEN-LAST:event_superadmin_Patient_Screen_DeleteButtonActionPerformed

    private void superadmin_Encounters_Screen_GetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Encounters_Screen_GetButtonActionPerformed
        // TODO add your handling code here:
        String patientIdToSearch = superadmin_Encounters_Screen_SearchPatientID_TextField.getText().trim();
        ArrayList<Patient> patientsArrayList = new ArrayList<>();
        if (!superadmin_Encounters_Screen_SearchPatientID_TextField.getText().trim().equals("")) {
            
            if (USER_ROLE.equals("SUPER_ADMIN") || USER_ROLE.equals("DOCTOR")){
            
            for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++) {

                patientsArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList();
                if (!patientsArrayList.isEmpty()) {
                    for (int j = 0; j < patientsArrayList.size(); j++) {
                        if (patientsArrayList.get(j).getPatientId().equals(patientIdToSearch)) {
                            superadmin_Encounters_Screen_patientIdTextField.setText(patientsArrayList.get(j).getPatientId());
                            superadmin_Encounters_Screen_PatientNameTextField.setText(patientsArrayList.get(j).getPatientName());
                            superadmin_Encounters_Screen_PatientPhoneTextField.setText(patientsArrayList.get(j).getPatientPhone());
                            superadmin_Encounters_Screen_Patient_Hospital_TextField.setText(patientsArrayList.get(j).getPatientHospitalName());
                            superadmin_Encounters_Screen_Doctor_Name_TextField.setText(patientsArrayList.get(j).getdoctorName());
                            superadmin_Encounters_Screen_Patient_HospitalId_TextField.setText(patientsArrayList.get(j).getPatientHospitalID());
                            HOSPITAL_ARRAYLIST_INDEX = i;
                            PATIENT_ARRAYLIST_INDEX = j;
                            if (!patientsArrayList.get(j).getEncountersArraylist().isEmpty()) {
                                superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                                setDataOnAllEncountersTable("viewAllEncountersTable", superadmin_Encounters_Screen_TableDataDefaultTableModel, patientsArrayList.get(j).getEncountersArraylist(), superadmin_Encounters_Screen_EncounterHistoryTable);
                            }
                            i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
                            j = patientsArrayList.size();
                        } else {
                        superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                        }
                    }
                }
            }
            getSelectedDoctor();
        }
            else if (USER_ROLE.equals("HOSPITAL"))
            {
                patientsArrayList = new ArrayList<>();
                patientsArrayList.addAll(getSelecteHospital().getEnrolledPatientsArrayList());
                if (!patientsArrayList.isEmpty()){
                for (int j = 0; j < patientsArrayList.size(); j++) {
                        if (patientsArrayList.get(j).getPatientId().equals(patientIdToSearch)) {
                            superadmin_Encounters_Screen_patientIdTextField.setText(patientsArrayList.get(j).getPatientId());
                            superadmin_Encounters_Screen_PatientNameTextField.setText(patientsArrayList.get(j).getPatientName());
                            superadmin_Encounters_Screen_PatientPhoneTextField.setText(patientsArrayList.get(j).getPatientPhone());
                            superadmin_Encounters_Screen_Patient_Hospital_TextField.setText(patientsArrayList.get(j).getPatientHospitalName());
                            superadmin_Encounters_Screen_Patient_HospitalId_TextField.setText(patientsArrayList.get(j).getPatientHospitalID());
                            superadmin_Encounters_Screen_Doctor_Name_TextField.setText(patientsArrayList.get(j).getdoctorName());
                            
                            if (!patientsArrayList.get(j).getEncountersArraylist().isEmpty()) {
                                superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                                setDataOnAllEncountersTable("viewAllEncountersTable", superadmin_Encounters_Screen_TableDataDefaultTableModel, patientsArrayList.get(j).getEncountersArraylist(), superadmin_Encounters_Screen_EncounterHistoryTable);
                            }
                            j = patientsArrayList.size();
                        }
                    }
                }
            } else if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
                        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++) {
                            if (DataStorageClass.USERID.equals("allston_admin")){
                            if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalCommunity().equals("Allston"))
                            {
                                patientsArrayList.addAll(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList());
                            }
                            }
                            
                            else if (DataStorageClass.USERID.equals("mountain_view_admin")){
                            
                                if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalCommunity().equals("Mountain View"))
                                
                            {
                                patientsArrayList.addAll(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList());
                            }
                              
                            } else if (DataStorageClass.USERID.equals("back_bay_admin")){
                            
                                if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalCommunity().equals("Back Bay"))
                                
                            {
                                patientsArrayList.addAll(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList());
                            }
                              
                            } else if (DataStorageClass.USERID.equals("brighton_admin")){
                            
                                if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalCommunity().equals("Brighton"))
                                
                            {
                                patientsArrayList.addAll(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList());
                            }
                              
                            }
                                
                                
                            
            }
                        
                if (!patientsArrayList.isEmpty()){
                for (int j = 0; j < patientsArrayList.size(); j++) {
                        if (patientsArrayList.get(j).getPatientId().equals(patientIdToSearch)) {
                            superadmin_Encounters_Screen_patientIdTextField.setText(patientsArrayList.get(j).getPatientId());
                            superadmin_Encounters_Screen_PatientNameTextField.setText(patientsArrayList.get(j).getPatientName());
                            superadmin_Encounters_Screen_PatientPhoneTextField.setText(patientsArrayList.get(j).getPatientPhone());
                            superadmin_Encounters_Screen_Patient_Hospital_TextField.setText(patientsArrayList.get(j).getPatientHospitalName());
                            superadmin_Encounters_Screen_Patient_HospitalId_TextField.setText(patientsArrayList.get(j).getPatientHospitalID());
                            superadmin_Encounters_Screen_Doctor_Name_TextField.setText(patientsArrayList.get(j).getdoctorName());
                            
                            if (!patientsArrayList.get(j).getEncountersArraylist().isEmpty()) {
                                superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                                setDataOnAllEncountersTable("viewAllEncountersTable", superadmin_Encounters_Screen_TableDataDefaultTableModel, patientsArrayList.get(j).getEncountersArraylist(), superadmin_Encounters_Screen_EncounterHistoryTable);
                            }
                            j = patientsArrayList.size();
                        }
                    }
                }
            }
            
        }

    }//GEN-LAST:event_superadmin_Encounters_Screen_GetButtonActionPerformed

    private void superAdminDashboardScreenAdd_Details_Reset_Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superAdminDashboardScreenAdd_Details_Reset_Button6ActionPerformed
        // TODO add your handling code here:
        initSuperUserEnountersScreen();
    }//GEN-LAST:event_superAdminDashboardScreenAdd_Details_Reset_Button6ActionPerformed

    private void Approve_Patients_Screen_ApproveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Approve_Patients_Screen_ApproveButtonActionPerformed
        // TODO add your handling code here:
       int selectedindex = Approve_Patients_Screen_Table.getSelectedRow();
       Person person = new Person();
       
       if (USER_ROLE.equals("SUPER_ADMIN")){
       person = DataStorageClass.person_registration_ArrayList.get(selectedindex);
       person.setStatus("Approved");
       
       Patient patient= new Patient();
       patient.setPatientId(person.getId());
       patient.setPassword(person.getPassword());
       patient.setPatientName(person.getName());
       patient.setPatientAddress(person.getAddress());
       patient.setPatientPincode(person.getPincode());
       patient.setPatientHospitalName(person.getHospitalname());
       patient.setPatientPhone(person.getPhone());
       patient.setPatientDepartment(person.getDepartment());
       patient.setPatientUUID(DataStorageClass.generateUUID());
       patient.setPatientHospitalID(person.getHospitalid());
       patient.setDoctorId(person.getDoctorid());
       patient.setDoctorName(person.getDoctorname());
       
//       DataStorageClass.person_registration_ArrayList.set(selectedindex, person);
       DataStorageClass.person_registration_ArrayList.remove(selectedindex);

       if (!DataStorageClass.hospital_Screen_HospitalArrayList.isEmpty())
       {
           for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
           {
           if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID().equals(person.getHospitalid()))
           {
               ArrayList <Patient> patientArrayList = new ArrayList<>();
               
               patientArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList();
               patientArrayList.add(patient);
               
               DataStorageClass.hospital_Screen_HospitalArrayList.get(i).setEnrolledPatientsArrayList(patientArrayList);
           }
           }
       }
       JOptionPane.showMessageDialog(null, "Person is approved and converted into patient.");

       initSuperUserApprovePatientsScreen(DataStorageClass.person_registration_ArrayList);
       }
       else if (USER_ROLE.equals("HOSPITAL") || USER_ROLE.equals("COMMUNITY_ADMIN")){
           
       person = filteredHospitalPersonsArrayList.get(selectedindex);
       person.setStatus("Approved");
       Patient patient= new Patient();
       patient.setPatientId(person.getId());
       patient.setPassword(person.getPassword());
       patient.setPatientName(person.getName());
       patient.setPatientAddress(person.getAddress());
       patient.setPatientPhone(person.getPhone());
       patient.setPatientPincode(person.getPincode());
       patient.setPatientHospitalName(person.getHospitalname());
       patient.setPatientDepartment(person.getDepartment());
       patient.setPatientUUID(DataStorageClass.generateUUID());
       patient.setPatientHospitalID(person.getHospitalid());
       patient.setDoctorId(person.getDoctorid());
       patient.setDoctorName(person.getDoctorname());
       
       
       for (int i = 0; i < DataStorageClass.person_registration_ArrayList.size(); i++)
       {
           if (DataStorageClass.person_registration_ArrayList.get(i).getId().equals(person.getId()))
           {
                  DataStorageClass.person_registration_ArrayList.set(i, person);
           }
       }
       
              if (!DataStorageClass.hospital_Screen_HospitalArrayList.isEmpty())
       {
           for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
           {
           if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID().equals(person.getHospitalid()))
           {
               ArrayList <Patient> patientArrayList = new ArrayList<>();
               
               patientArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList();
               patientArrayList.add(patient);
               
               DataStorageClass.hospital_Screen_HospitalArrayList.get(i).setEnrolledPatientsArrayList(patientArrayList);
           }
           }
       }
              
                         for (int i = 0; i < DataStorageClass.userArrayList.size(); i++)
           {
           if (DataStorageClass.userArrayList.get(i).getId().equals(person.getId()))
           {          
               DataStorageClass.userArrayList.get(i).setRole("PATIENT");
               System.out.print("role changed to " +  DataStorageClass.userArrayList.get(i).getRole() + " id " + DataStorageClass.userArrayList.get(i).getId());
               i = DataStorageClass.userArrayList.size();
           }
           }
                         
                  filteredHospitalPersonsArrayList.set(selectedindex, person);
                  JOptionPane.showMessageDialog(null, "Person is approved and converted into patient.");
                  initSuperUserApprovePatientsScreen(filteredHospitalPersonsArrayList);

       }
       
    }//GEN-LAST:event_Approve_Patients_Screen_ApproveButtonActionPerformed

    private void Person_Screen_Search_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Person_Screen_Search_ButtonActionPerformed
        // TODO add your handling code here:
        String searchedPinCode = Person_Screen_Pincode_TextField.getText().trim();
        person_Screen_hospitals_table_DefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "City", "Pincode"}, 0);
        Person_Screen_All_Hospitals_Table.setModel(person_Screen_hospitals_table_DefaultTableModel);
        Person_Screen_All_Hospitals_Table.setPreferredSize(null);
        ArrayList<Hospital> filteredHospitals = new ArrayList<>();
        
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
           if (String.valueOf(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalPincode()).equals(searchedPinCode))
           {
               filteredHospitals.add(DataStorageClass.hospital_Screen_HospitalArrayList.get(i));
           }
        }
        if (!filteredHospitals.isEmpty())
        {   Person_Screen_Table_Label.setText(filteredHospitals.size() + " Hospitals Found for Pincode \"" + searchedPinCode + "\"");
            setDataOnAllHospitalsTable("Person_Screen_AllHospitalsTable", person_Screen_hospitals_table_DefaultTableModel, filteredHospitals, Person_Screen_All_Hospitals_Table);
        }
        else
        {
            Person_Screen_Table_Label.setText("No Hospitals Found for Pincode \"" + searchedPinCode + "\"");
        }
    }//GEN-LAST:event_Person_Screen_Search_ButtonActionPerformed

    private void Person_Screen_ViewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Person_Screen_ViewAllButtonActionPerformed
        // TODO add your handling code here:
        initPersonSearchHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_Person_Screen_ViewAllButtonActionPerformed

    
    
    public boolean validatehospitalfields()//Hospital Window superadmin
  {String password = new String(hospital_Screen_password_TextField.getPassword()).trim();
  
  int x;
    try {
        x = Integer.parseInt( hospital_Screen_hospitalPincodeTextField.getText());
    } catch (NumberFormatException nfe) {
            
//            JOptionPane.showMessageDialog(null, "enter integer");
            return false;
    }
    if (hospital_Screen_HospitalIdTextField.getText().trim().isEmpty()||hospital_Screen_hospitalNameTextField.getText().trim().isEmpty()
            ||hospital_Screen_hospitalAddressTextField.getText().trim().isEmpty()
            ||hospital_Screen_hospitalCityTextField.getText().trim().isEmpty()
            || hospital_Screen_hospitalPincodeTextField.getText().trim().isEmpty()
            || hospital_Screen_hospitalPincodeTextField.getText().length() < 5 || hospital_Screen_hospitalPincodeTextField.getText().length() > 5 )   
        return false;

    if (password.isEmpty())
      return false;
    
    if (DataStorageClass.userExistOrNot(hospital_Screen_HospitalIdTextField.getText().trim()))
      return false;

   return true;
    }
    
    private void hospital_Screen_add_hospital_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospital_Screen_add_hospital_buttonActionPerformed
        // TODO add your handling code here:
        
        if(validatehospitalfields()){
        Hospital hospital = new Hospital();
        hospital.setHospitalUUID(DataStorageClass.generateUUID());
        hospital.setHospitalID(hospital_Screen_HospitalIdTextField.getText().trim());
        hospital.setHospitalName(hospital_Screen_hospitalNameTextField.getText().trim());
        hospital.setHospitalAddress(hospital_Screen_hospitalAddressTextField.getText().trim());
        hospital.setHospitalPincode(Integer.parseInt(hospital_Screen_hospitalPincodeTextField.getText().trim()));
        hospital.setHospitalCity(hospital_Screen_hospitalCityTextField.getText().trim());
        hospital.setHospitalCommunity(hospital_Screen_hospitalCommunityComboBox.getSelectedItem().toString().trim());
        hospital.setAdminpassword(new String(hospital_Screen_password_TextField.getPassword()).trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.add(hospital);
        
        NewPerson user = new NewPerson();
        
        user.setUuid(DataStorageClass.generateUUID());
        user.setId(hospital_Screen_HospitalIdTextField.getText().trim());
        user.setPassword(new String(hospital_Screen_password_TextField.getPassword()).trim());
        user.setRole("HOSPITAL");
        
        DataStorageClass.userArrayList.add(user);
        
        initSuperUserAddHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_hospital_Screen_add_hospital_buttonActionPerformed
else
            JOptionPane.showMessageDialog(null, "Invalid Data");
        
    }
    private void superadmin_Patient_Screen_Patient_DepartmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Patient_Screen_Patient_DepartmentComboBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_superadmin_Patient_Screen_Patient_DepartmentComboBoxActionPerformed

    
    
    
    
  public  boolean checksuperadminpatientfields()
    {
        String password = new String(superadmin_Patients_Screen_password_TextField.getPassword()).trim();
   if( superadmin_Patients_Screen_patientId_TextField.getText().trim().isEmpty()
           || superadmin_Patient_Screen_PatientNameTextField.getText().trim().isEmpty()
            ||superadmin_Patient_Screen_PatientPhone_TextField.getText().trim().isEmpty()||
           superadmin_Patient_Screen_PatientPhone_TextField.getText().trim().length()<10 || superadmin_Patient_Screen_PatientPhone_TextField.getText().length()>10||
            superadmin_Patient_Screen_Patient_Address_TextField.getText().trim().isEmpty()||
            superadmin_Patient_Screen_Patient_Pin_TextField.getText().trim().isEmpty()||
            superadmin_Patient_Screen_Patient_Pin_TextField.getText().length()<5 ||superadmin_Patient_Screen_Patient_Pin_TextField.getText().length()>5
           || superadmin_Patient_Screen_Select_HospitalList.isSelectionEmpty()||
           superadmin_Patient_Screen_Select_DoctorList.isSelectionEmpty())
           return false;

      
if (password.isEmpty())
return false;
 
     if (DataStorageClass.userExistOrNot(superadmin_Patients_Screen_patientId_TextField.getText().trim()))
      return false;

    return true;
    }

    
    private void superadmin_Patient_Screen_AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Patient_Screen_AddButtonActionPerformed

if(checksuperadminpatientfields())   {     // TODO add your handling code here:
        int selectedHospitalIndex = superadmin_Patient_Screen_Select_HospitalList.getSelectedIndex();
        int selectedDoctorIndex = superadmin_Patient_Screen_Select_DoctorList.getSelectedIndex();
        Patient patient = new Patient();
        patient.setPatientUUID(DataStorageClass.generateUUID());
        patient.setPatientId(superadmin_Patients_Screen_patientId_TextField.getText().trim());
        patient.setPatientName(superadmin_Patient_Screen_PatientNameTextField.getText().trim());
        patient.setPatientPhone(superadmin_Patient_Screen_PatientPhone_TextField.getText().trim());
        patient.setPatientAddress(superadmin_Patient_Screen_Patient_Address_TextField.getText().trim());
        patient.setPatientPincode(superadmin_Patient_Screen_Patient_Pin_TextField.getText().trim());
        patient.setPassword(new String(superadmin_Patients_Screen_password_TextField.getPassword()).trim());
        patient.setPatientHospitalID(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalID());
        patient.setHospitalUUID(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalUUID());
        patient.setPatientHospitalName(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalName());
        patient.setPatientDepartment(superadmin_Patient_Screen_Patient_DepartmentComboBox.getSelectedItem().toString());
        patient.setDoctorId(doctorsinhospital.get(selectedDoctorIndex).getDoctorId());
        patient.setdoctorName(doctorsinhospital.get(selectedDoctorIndex).getDoctorName());
        patient.setDoctorUUID(doctorsinhospital.get(selectedDoctorIndex).getDoctorName());

        
                if (USER_ROLE.equals("SUPER_ADMIN")){
    DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getEnrolledPatientsArrayList().add(patient);        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
            
             DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndexAccordingToHospitalID(filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedHospitalIndex).getHospitalID())).getEnrolledPatientsArrayList().add(patient);  
//         DataStorageClass.hospital_Screen_HospitalArrayList.set(getHospitalIndexAccordingToHospitalID(filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedHospitalIndex).getHospitalID()), tempHospital);
         
        }
                
        
        
    

        NewPerson user = new NewPerson();        
        user.setUuid(DataStorageClass.generateUUID());
        user.setId(superadmin_Patients_Screen_patientId_TextField.getText().trim());
        user.setPassword(new String(superadmin_Patients_Screen_password_TextField.getPassword()).trim());
        user.setRole("PATIENT");
        
        DataStorageClass.userArrayList.add(user);

        initSuperUserAddPatientScreen(DataStorageClass.hospital_Screen_HospitalArrayList);

    }//GEN-LAST:event_superadmin_Patient_Screen_AddButtonActionPerformed


else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void superAdminDashboardScreenAdd_Details_Save_Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superAdminDashboardScreenAdd_Details_Save_Button9ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_superAdminDashboardScreenAdd_Details_Save_Button9ActionPerformed

    
    public boolean validateencountersfields() // superadmin encounters
  {
      if (superadmin_Encounters_Screen_TemperatureTextField.getText().trim().isEmpty()
              || superadmin_Encounters_Screen_BloodPressure_TextField.getText().trim().isEmpty())   
         return false;

 
    return true;
      
  }
    private void superadmin_Encounters_Screen_Add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Encounters_Screen_Add_ButtonActionPerformed
        // TODO add your handling code here:
        if(validateencountersfields()){
        String temperature = superadmin_Encounters_Screen_TemperatureTextField.getText().trim();
        String bloodpressure = superadmin_Encounters_Screen_BloodPressure_TextField.getText().trim();
//        Patient patient = DataStorageClass.hospital_Screen_HospitalArrayList.get(HOSPITAL_ARRAYLIST_INDEX).getEnrolledPatientsArrayList().get(PATIENT_ARRAYLIST_INDEX);
//        ArrayList<Encounter> encounterArrayList = patient.getEncountersArraylist();
        Encounter encounter = new Encounter();
        encounter.setEncounterUUId(DataStorageClass.generateUUID());
        encounter.setPatientID(superadmin_Encounters_Screen_patientIdTextField.getText().trim());
        encounter.setPatientName(superadmin_Encounters_Screen_PatientNameTextField.getText().trim());
        encounter.setTemperature(temperature);
        encounter.setBloodpressure(bloodpressure);
        encounter.settimeStamp(DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm:ss").format(LocalDateTime.now()));
        
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
            if (!DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().isEmpty())
            {
                for (int j = 0; j < DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().size(); j++){
                    
                    if(                DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().get(j).getPatientId().
                            equals(superadmin_Encounters_Screen_patientIdTextField.getText().trim()))
                    {
                        
                       
                        
//                    ArrayList<Encounter> tempencounterArrayList = new ArrayList<>();
//                    tempencounterArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().get(j).getEncountersArraylist();
//                    tempencounterArrayList.add(encounter);
//                    DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().get(j).setEncountersArraylist(tempencounterArrayList);
//                    superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
//                    superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                    superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                    superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                    DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().get(j).getEncountersArraylist().add(encounter);
                    ArrayList<Encounter> tempencounterArrayList = new ArrayList<>();
                    tempencounterArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList().get(j).getEncountersArraylist();
                    setDataOnAllEncountersTable("viewAllEncountersTable", superadmin_Encounters_Screen_TableDataDefaultTableModel, tempencounterArrayList, superadmin_Encounters_Screen_EncounterHistoryTable);
                    superadmin_Encounters_Screen_TemperatureTextField.setText("");
                    superadmin_Encounters_Screen_BloodPressure_TextField.setText("");
//                    break;
                    
                    }
                    else
                    {
                    superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                    superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                    }
                }
                

            }
            
        }
        
   
        
    }//GEN-LAST:event_superadmin_Encounters_Screen_Add_ButtonActionPerformed

        else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void MainExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainExitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_MainExitButtonActionPerformed

    private void MainLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainLogoutButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new LoginScreen().setVisible(true);
    }//GEN-LAST:event_MainLogoutButtonActionPerformed

    private void Person_Registeration_Screen_ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Person_Registeration_Screen_ResetButtonActionPerformed
        // TODO add your handling code here:
        initRegisterPatientScreen();
    }//GEN-LAST:event_Person_Registeration_Screen_ResetButtonActionPerformed

    private void Person_Registeration_Screen_RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Person_Registeration_Screen_RegisterButtonActionPerformed
        // TODO add your handling code here:
      Person person = new Person();
      person.setId(Person_Registeration_Screen_idTextField.getText().trim());
      person.setPassword(new String(Person_Registeration_Screen_passwordTextField.getPassword()).trim());
      person.setName(Person_Registeration_Screen_nameTextField.getText().trim());
      person.setPhone(Person_Registeration_Screen_PhoneTextField.getText().trim());
      person.setAddress(Person_Registeration_Screen_AddressTextField.getText().trim());
      person.setPincode(Person_Registeration_Screen_PinTextField.getText().trim());
      person.setDepartment(Person_Registeration_Screen_DepartmentComboBox.getSelectedItem().toString().trim());
      person.setCommunity(Person_Registeration_Screen_Community_Label.getText().trim());
      person.setHospitalname(Person_Registeration_Screen_HospitalNameLabel.getText().trim());
      person.setHospitalid(Person_Registeration_Screen_HospitalId_Label.getText().trim());
      person.setDoctorname(Person_Registeration_Screen_SelectDoctorList.getSelectedValue().trim());
      person.setDoctorindex(Person_Registeration_Screen_SelectDoctorList.getSelectedIndex());
      person.setDoctorid(Person_Registeration_Screen_DoctorId_Label.getText().trim());
      person.setStatus("Not Approved");
      DataStorageClass.person_registration_ArrayList.add(person);
      
       NewPerson user = new NewPerson();
        
        user.setUuid(DataStorageClass.generateUUID());
        user.setId(Person_Registeration_Screen_idTextField.getText().trim());
        user.setPassword(new String(Person_Registeration_Screen_passwordTextField.getPassword()).trim());
        user.setRole("PERSON");
        
        DataStorageClass.userArrayList.add(user);
        JOptionPane.showMessageDialog(null, "Registration Successful!");

      
    }//GEN-LAST:event_Person_Registeration_Screen_RegisterButtonActionPerformed

    private void Person_Registeration_Screen_DepartmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Person_Registeration_Screen_DepartmentComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Person_Registeration_Screen_DepartmentComboBoxActionPerformed

    private void Hospital_Screen_Add_Doctor_GetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_Add_Doctor_GetButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hospital_Screen_Add_Doctor_GetButtonActionPerformed

    private void Hospital_Screen_Add_Doctor_Id_TextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_Add_Doctor_Id_TextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hospital_Screen_Add_Doctor_Id_TextfieldActionPerformed

    private void Hospital_Screen_Add_Doctor_UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_Add_Doctor_UpdateButtonActionPerformed


if (validateadddoctor()){        // TODO add your handling code here:
        int selectedHospitalIndex = getHospitalIndex();
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setDoctorId(Hospital_Screen_Add_Doctor_Id_Textfield.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setPassword(new String(Hospital_Screen_Add_Doctor_Password_TextField.getPassword()).trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setDoctorName(Hospital_Screen_Add_Doctor_NameTextField.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setDoctorPhone(Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setHospitalId(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalID());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setHospitalName(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalName());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow()).setDepartmentName(Hospital_Screen_Add_Doctor_DepartmentComboBox.getSelectedItem().toString());                 
        initHospitalUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_Hospital_Screen_Add_Doctor_UpdateButtonActionPerformed

     else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void Hospital_Screen_Add_Doctor_DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_Add_Doctor_DeleteButtonActionPerformed
        // TODO add your handling code here:
        DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndex()).getWorkingdoctorsArrayList().remove(Hospital_Screen_Add_Doctor_AllDoctorsTable.getSelectedRow());
        initHospitalUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_Hospital_Screen_Add_Doctor_DeleteButtonActionPerformed
 public boolean validateadddoctortfields()//Doctor Window add doctor
  {   String password = new String(Hospital_Screen_Add_Doctor_Password_TextField.getPassword()).trim();
    if (Hospital_Screen_Add_Doctor_Id_Textfield.getText().trim().isEmpty()||
            Hospital_Screen_Add_Doctor_NameTextField.getText().trim().isEmpty()
            ||Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim().isEmpty()
            || Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim().length()<10 || Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim().length()>10
          )   
{
 return false;
}
      
if (password.isEmpty())
 {
  return false;
 }
   
else
    return true;
    }
    
    
    
    
    
 
 
  public boolean validateadddoctor()//Doctor Window add doctor
  {
    String password = new String(Hospital_Screen_Add_Doctor_Password_TextField.getPassword()).trim();
    if (Hospital_Screen_Add_Doctor_Id_Textfield.getText().trim().isEmpty()
            ||Hospital_Screen_Add_Doctor_NameTextField.getText().trim().isEmpty()
            ||Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim().isEmpty()
            ||Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim().length()<10 || 
            Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim().length()>10
     )   
{
 return false;
}
      
if (password.isEmpty())
 {
  return false;
 }
   
if (DataStorageClass.userExistOrNot(Hospital_Screen_Add_Doctor_Id_Textfield.getText().trim()))
      return false;

else
    return true;
    }
    
    
    
    private void Hospital_Screen_Add_Doctor_AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_Add_Doctor_AddButtonActionPerformed


if (validateadddoctor()){        // TODO add your handling code here:
        Hospital hospital = new Hospital();
        hospital = getSelecteHospital();
        Doctor doctor = new Doctor();
        doctor.setDoctorUUID(DataStorageClass.generateUUID());
        doctor.setDoctorId(Hospital_Screen_Add_Doctor_Id_Textfield.getText().trim());
        doctor.setPassword(new String(Hospital_Screen_Add_Doctor_Password_TextField.getPassword()).trim());
        doctor.setDoctorName(Hospital_Screen_Add_Doctor_NameTextField.getText().trim());
        doctor.setDoctorPhone(Hospital_Screen_Add_Doctor_Phone_TextField.getText().trim());
        doctor.setHospitalId(hospital.getHospitalID());
        doctor.setHospitalUUID(hospital.getHospitalUUID());
        doctor.setHospitalName(hospital.getHospitalName());
        doctor.setDepartmentName(Hospital_Screen_Add_Doctor_DepartmentComboBox.getSelectedItem().toString());
        
        ArrayList<Doctor> tempDoctorlist = hospital.getWorkingdoctorsArrayList();
        tempDoctorlist.add(doctor);
        hospital.setWorkingdoctorsArrayList(tempDoctorlist);
        
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
            if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID().equals(hospital.getHospitalID()))
            {
        DataStorageClass.hospital_Screen_HospitalArrayList.set(i, hospital);               
        i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
            }
        }
        
                NewPerson user = new NewPerson();
        
        user.setUuid(DataStorageClass.generateUUID());
        user.setId(Hospital_Screen_Add_Doctor_Id_Textfield.getText().trim());
        user.setPassword(new String(Hospital_Screen_Add_Doctor_Password_TextField.getPassword()).trim());
        user.setRole("DOCTOR");
        
        DataStorageClass.userArrayList.add(user);
        
        
        initHospitalUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_Hospital_Screen_Add_Doctor_AddButtonActionPerformed

    
     else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    
    private void Hospital_Screen_Add_Doctor_ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_Add_Doctor_ResetButtonActionPerformed
        // TODO add your handling code here:
        initHospitalUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_Hospital_Screen_Add_Doctor_ResetButtonActionPerformed

    private void Hospital_Admin_Add_PatientScreen_Id_TextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Admin_Add_PatientScreen_Id_TextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hospital_Admin_Add_PatientScreen_Id_TextfieldActionPerformed

    
    public boolean validateaddpatientfields()//Doctor Window add patient 
  {
    String password = new String(Hospital_Admin_Add_PatientScreen_Textfield.getPassword()).trim();
    if (Hospital_Admin_Add_PatientScreen_Id_Textfield.getText().trim().isEmpty()
            ||Hospital_Admin_Add_PatientScreen__TextField.getText().trim().isEmpty()
            ||Hospital_Admin_Add_PatientScreen_Phone_TextField.getText().trim().isEmpty()
            ||Hospital_Admin_Add_PatientScreen_Phone_TextField.getText().trim().length()<10 || Hospital_Admin_Add_PatientScreen_Phone_TextField.getText().trim().length()>10
            ||Hospital_Admin_Add_PatientScreen_Address_TextField.getText().trim().isEmpty()
            || Hospital_Admin_Add_PatientScreen_Pincode_TextField.getText().trim().length()<5 || Hospital_Admin_Add_PatientScreen_Pincode_TextField.getText().trim().length()>5
         
            || Hospital_Admin_Add_PatientScreen_DoctorList.isSelectionEmpty())   
{
 return false;
}
      
if (password.isEmpty())
 {
  return false;
 }

if (DataStorageClass.userExistOrNot(Hospital_Admin_Add_PatientScreen_Id_Textfield.getText().trim()))
      return false;
   
else
    return true;
    }
    
    
    
    
    
    
    private void Hospital_Admin_Add_PatientScreen_AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Admin_Add_PatientScreen_AddButtonActionPerformed
        // TODO add your handling code here:
        String selectedHospitalId = Hospital_Admin_Add_PatientScreen_HospitaIdTextField.getText().trim();
        String selectedDoctorId = Hospital_Admin_Add_PatientScreen_DoctorIDTextField.getText().trim();
        if(validateaddpatientfields())
        {
        Patient patient = new Patient();
        patient.setPatientUUID(DataStorageClass.generateUUID());
        patient.setPatientId(Hospital_Admin_Add_PatientScreen_Id_Textfield.getText().trim());
        patient.setPassword(new String(Hospital_Admin_Add_PatientScreen_Textfield.getPassword()));
        patient.setPatientName(Hospital_Admin_Add_PatientScreen__TextField.getText().trim());
        patient.setPatientPhone(Hospital_Admin_Add_PatientScreen_Phone_TextField.getText().trim());
        patient.setPatientAddress(Hospital_Admin_Add_PatientScreen_Address_TextField.getText().trim());
        patient.setPatientPincode(Hospital_Admin_Add_PatientScreen_Pincode_TextField.getText().trim());
        patient.setPatientHospitalID(Hospital_Admin_Add_PatientScreen_HospitaIdTextField.getText().trim());
        patient.setPatientHospitalName(Hospital_Admin_Add_PatientScreen_HospitalNameTextField.getText().trim());
        patient.setPatientDepartment(Hospital_Admin_Add_PatientScreen_ComboBox.getSelectedItem().toString());
        patient.setDoctorId(selectedDoctorId);
        patient.setdoctorName(Hospital_Admin_Add_PatientScreen_DoctorList.getSelectedValue());

       if (!DataStorageClass.hospital_Screen_HospitalArrayList.isEmpty())
       {
           for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
           {
               if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID().equals(selectedHospitalId))
               {
                   ArrayList<Patient> tempPatients = new ArrayList<>();
                   tempPatients = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList();
                   tempPatients.add(patient);
                   DataStorageClass.hospital_Screen_HospitalArrayList.get(i).setEnrolledPatientsArrayList(tempPatients);
                   i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
               }
           }
       }
        
       
                       NewPerson user = new NewPerson();
        
        user.setUuid(DataStorageClass.generateUUID());
        user.setId(Hospital_Admin_Add_PatientScreen_Id_Textfield.getText().trim());
        user.setPassword(new String(Hospital_Admin_Add_PatientScreen_Textfield.getPassword()).trim());
        user.setRole("PATIENT");
        
        DataStorageClass.userArrayList.add(user);
        
        
        initHospital_Screen_AddPatient(getSelecteHospital());
        
    }//GEN-LAST:event_Hospital_Admin_Add_PatientScreen_AddButtonActionPerformed

        else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void Hospital_Screen_AddPatients_Tab_ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Screen_AddPatients_Tab_ResetButtonActionPerformed
        // TODO add your handling code here:
        initHospital_Screen_AddPatient(getSelecteHospital());
    }//GEN-LAST:event_Hospital_Screen_AddPatients_Tab_ResetButtonActionPerformed

    private void Hospital_Admin_Add_PatientScreen_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Admin_Add_PatientScreen_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hospital_Admin_Add_PatientScreen_ButtonActionPerformed

    private void superadmin_Encounters_Screen_SearchPatientID_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Encounters_Screen_SearchPatientID_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_superadmin_Encounters_Screen_SearchPatientID_TextFieldActionPerformed

    private void superadmin_Doctors_Screen_Reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Doctors_Screen_Reset_ButtonActionPerformed
        // TODO add your handling code here:
        initSuperUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
    }//GEN-LAST:event_superadmin_Doctors_Screen_Reset_ButtonActionPerformed

    
    
     public boolean validatedoctorfields ()   // Doctor Window super admin
  {
    String password1 = new String(superadmin_Doctors_Screen_Password_Textfield.getPassword()).trim();
    if (superadmin_Doctors_Screen_Id_Textfield.getText().trim().isEmpty()
            ||superadmin_Doctors_Screen_Name_TextField.getText().trim().isEmpty()
            ||superadmin_Doctors_Screen_Phone_TextField.getText().trim().isEmpty()
  || superadmin_Doctors_Screen_Phone_TextField.getText().trim().length()<10 
            ||superadmin_Doctors_Screen_Phone_TextField.getText().trim().length()>10
         ||   superadmin_Doctors_Screen_Hospital_List.isSelectionEmpty())   
    { return false;}
     
if (password1.isEmpty())
{ return false;}
 

    if (DataStorageClass.userExistOrNot(superadmin_Doctors_Screen_Id_Textfield.getText().trim()))
      return false;
else
    return true;
    }
    private void superadmin_Doctors_Screen_Add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Doctors_Screen_Add_ButtonActionPerformed
      // TODO add your handling code here:
        int selectedHospitalIndex = superadmin_Doctors_Screen_Hospital_List.getSelectedIndex();
        
        if (validatedoctorfields () ){
        Doctor doctor = new Doctor();
        doctor.setDoctorUUID(DataStorageClass.generateUUID());
        doctor.setDoctorId(superadmin_Doctors_Screen_Id_Textfield.getText().trim());
        doctor.setPassword(new String(superadmin_Doctors_Screen_Password_Textfield.getPassword()).trim());
        doctor.setDoctorName(superadmin_Doctors_Screen_Name_TextField.getText().trim());
        doctor.setDoctorPhone(superadmin_Doctors_Screen_Phone_TextField.getText().trim());
        doctor.setHospitalId(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalID());
        doctor.setHospitalUUID(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalUUID());
        doctor.setHospitalName(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalName());
        doctor.setDepartmentName(superadmin_Doctors_Screen_Department_Combo_Box.getSelectedItem().toString());
        Hospital tempHospital = DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex);
        ArrayList<Doctor> tempDoctorlist = tempHospital.getWorkingdoctorsArrayList();
        tempDoctorlist.add(doctor);
        tempHospital.setWorkingdoctorsArrayList(tempDoctorlist);
        
        if (USER_ROLE.equals("SUPER_ADMIN")){
        DataStorageClass.hospital_Screen_HospitalArrayList.set(selectedHospitalIndex, tempHospital);
        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
         DataStorageClass.hospital_Screen_HospitalArrayList.set(getHospitalIndexAccordingToHospitalID(filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedHospitalIndex).getHospitalID()), tempHospital);
         
        }
        
        
        NewPerson user = new NewPerson();
        
        user.setUuid(DataStorageClass.generateUUID());
        user.setId(superadmin_Doctors_Screen_Id_Textfield.getText().trim());
        user.setPassword(new String(superadmin_Doctors_Screen_Password_Textfield.getPassword()).trim());
        user.setRole("DOCTOR");
        
        DataStorageClass.userArrayList.add(user);
        
        
         if (USER_ROLE.equals("SUPER_ADMIN")){
        initSuperUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
             initSuperUserAddDoctorScreenCommunityAdmin(DataStorageClass.hospital_Screen_HospitalArrayList);
        }
         
         
       
    }//GEN-LAST:event_superadmin_Doctors_Screen_Add_ButtonActionPerformed
else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void superadmin_Doctors_Screen_UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Doctors_Screen_UpdateButtonActionPerformed


if (validatedoctorfields () ){        // TODO add your handling code here:
        int selectedHospitalIndex = superadmin_Doctors_Screen_Hospital_List.getSelectedIndex();
        ArrayList<Doctor> workingdrlist = new ArrayList<>();
        
               if (USER_ROLE.equals("SUPER_ADMIN")){
                workingdrlist = DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList();

        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
         workingdrlist = filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedHospitalIndex).getWorkingdoctorsArrayList();
        }
        
        for (int i = 0; i < workingdrlist.size(); i++)
        {
        if(workingdrlist.get(i).getDoctorId().equals(superadmin_Doctors_Screen_doctor_id_label.getText().trim()))
        {
            
                             if (USER_ROLE.equals("SUPER_ADMIN")){
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDoctorId(superadmin_Doctors_Screen_Id_Textfield.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setPassword(new String(superadmin_Doctors_Screen_Password_Textfield.getPassword()).trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDoctorName(superadmin_Doctors_Screen_Name_TextField.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDoctorPhone(superadmin_Doctors_Screen_Phone_TextField.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setHospitalId(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalID());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setHospitalName(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalName());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDepartmentName(superadmin_Doctors_Screen_Department_Combo_Box.getSelectedItem().toString());                 
        
        
        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
            int newselectedindex = getHospitalIndexAccordingToHospitalID(filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedHospitalIndex).getHospitalID());
            selectedHospitalIndex = newselectedindex;
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDoctorId(superadmin_Doctors_Screen_Id_Textfield.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setPassword(new String(superadmin_Doctors_Screen_Password_Textfield.getPassword()).trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDoctorName(superadmin_Doctors_Screen_Name_TextField.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDoctorPhone(superadmin_Doctors_Screen_Phone_TextField.getText().trim());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setHospitalId(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalID());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setHospitalName(DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getHospitalName());
        DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().get(i).setDepartmentName(superadmin_Doctors_Screen_Department_Combo_Box.getSelectedItem().toString());                 
        
        
        }
                             
                             

                 if (USER_ROLE.equals("SUPER_ADMIN")){
        initSuperUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
             initSuperUserAddDoctorScreenCommunityAdmin(DataStorageClass.hospital_Screen_HospitalArrayList);
        }
         

        ADD_DR_UPDATED_DELETED = true;
        }

        }
        if (ADD_DR_UPDATED_DELETED)
        {
            JOptionPane.showMessageDialog(null, "Doctor Updated.");
            ADD_DR_UPDATED_DELETED = false;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Doctor NOT Updated. Please select the same hospital which you want to update the doctor");
        }
        
    }//GEN-LAST:event_superadmin_Doctors_Screen_UpdateButtonActionPerformed

else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    private void superadmin_Doctors_Screen_Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Doctors_Screen_Delete_ButtonActionPerformed
        // TODO add your handling code here:
        int selectedHospitalIndex = superadmin_Doctors_Screen_Hospital_List.getSelectedIndex();
        ArrayList<Doctor> workingdrlist = new ArrayList<>();
        
                       if (USER_ROLE.equals("SUPER_ADMIN")){
        workingdrlist = DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList();

        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
         workingdrlist = filteredHospitalsforDoctorsScreenCommunityAdmin.get(selectedHospitalIndex).getWorkingdoctorsArrayList();
        }
                       
                       
        for (int i = 0; i < workingdrlist.size(); i++)
        {
        if(workingdrlist.get(i).getDoctorId().equals(superadmin_Doctors_Screen_doctor_id_label.getText().trim()))
        {
            DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList().remove(i);
                 if (USER_ROLE.equals("SUPER_ADMIN")){
        initSuperUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
        }
        else  if (USER_ROLE.equals("COMMUNITY_ADMIN")) {
             initSuperUserAddDoctorScreenCommunityAdmin(DataStorageClass.hospital_Screen_HospitalArrayList);
        }        ADD_DR_UPDATED_DELETED = true;
        }

        }
        if (ADD_DR_UPDATED_DELETED)
        {
            JOptionPane.showMessageDialog(null, "Doctor Deleted.");
            ADD_DR_UPDATED_DELETED = false;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Doctor NOT Deleted. Please select the same hospital which you want to delete the doctor");
        }        
    }//GEN-LAST:event_superadmin_Doctors_Screen_Delete_ButtonActionPerformed

    private void superadmin_Doctors_Screen_Id_TextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superadmin_Doctors_Screen_Id_TextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_superadmin_Doctors_Screen_Id_TextfieldActionPerformed

    private void Hospital_Admin_Add_PatientScreen_DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Admin_Add_PatientScreen_AddButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hospital_Admin_Add_PatientScreen_AddButton1ActionPerformed

    private void Hospital_Patient_Screen_DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Patient_Screen_DeleteButtonActionPerformed
        // TODO add your handling code here:
        DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndex()).getEnrolledPatientsArrayList().remove(Hospital_Admin_Add_PatientScreen_All_Patients_Table.getSelectedRow());
        initHospital_Screen_AddPatient(getSelecteHospital());
    }//GEN-LAST:event_Hospital_Patient_Screen_DeleteButtonActionPerformed

    private void Hospital_Patient_Screen_UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hospital_Patient_Screen_UpdateButtonActionPerformed


 if(validateaddpatientfields()){        // TODO add your handling code here:
        Patient patient = new Patient();
        patient = DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndex()).getEnrolledPatientsArrayList().get(Hospital_Admin_Add_PatientScreen_All_Patients_Table.getSelectedRow());
        String selectedHospitalId = Hospital_Admin_Add_PatientScreen_HospitaIdTextField.getText().trim();
        String selectedDoctorId = Hospital_Admin_Add_PatientScreen_DoctorIDTextField.getText().trim();

        patient.setPatientId(Hospital_Admin_Add_PatientScreen_Id_Textfield.getText().trim());
        patient.setPassword(new String(Hospital_Admin_Add_PatientScreen_Textfield.getPassword()));
        patient.setPatientName(Hospital_Admin_Add_PatientScreen__TextField.getText().trim());
        patient.setPatientPhone(Hospital_Admin_Add_PatientScreen_Phone_TextField.getText().trim());
        patient.setPatientAddress(Hospital_Admin_Add_PatientScreen_Address_TextField.getText().trim());
        patient.setPatientPincode(Hospital_Admin_Add_PatientScreen_Pincode_TextField.getText().trim());
        patient.setPatientHospitalID(Hospital_Admin_Add_PatientScreen_HospitaIdTextField.getText().trim());
        patient.setPatientHospitalName(Hospital_Admin_Add_PatientScreen_HospitalNameTextField.getText().trim());
        patient.setPatientDepartment(Hospital_Admin_Add_PatientScreen_ComboBox.getSelectedItem().toString());
        patient.setDoctorId(selectedDoctorId);
        patient.setdoctorName(Hospital_Admin_Add_PatientScreen_DoctorList.getSelectedValue());
        
        DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndex()).getEnrolledPatientsArrayList().set(Hospital_Admin_Add_PatientScreen_All_Patients_Table.getSelectedRow(), patient);
        initHospital_Screen_AddPatient(getSelecteHospital());
    }//GEN-LAST:event_Hospital_Patient_Screen_UpdateButtonActionPerformed

 else
            JOptionPane.showMessageDialog(null, "Invalid Data");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperAdminDashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperAdminDashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperAdminDashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperAdminDashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperAdminDashboardScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approve_Patients_Screen_ApproveButton;
    private javax.swing.JTable Approve_Patients_Screen_Table;
    private javax.swing.JLabel Approve_Patients_Screen_Table_Title;
    private javax.swing.JTable Doctor_Assigned_Patients_Screen_AssignedPatients_Table;
    private javax.swing.JLabel Doctor_Assigned_Patients_Screen_Table_Title_Label;
    private javax.swing.JButton Hospital_Admin_Add_PatientScreen_AddButton;
    private javax.swing.JTextField Hospital_Admin_Add_PatientScreen_Address_TextField;
    private javax.swing.JTable Hospital_Admin_Add_PatientScreen_All_Patients_Table;
    private javax.swing.JButton Hospital_Admin_Add_PatientScreen_Button;
    private javax.swing.JComboBox<String> Hospital_Admin_Add_PatientScreen_ComboBox;
    private javax.swing.JLabel Hospital_Admin_Add_PatientScreen_DoctorIDTextField;
    private javax.swing.JList<String> Hospital_Admin_Add_PatientScreen_DoctorList;
    private javax.swing.JLabel Hospital_Admin_Add_PatientScreen_HospitaIdTextField;
    private javax.swing.JLabel Hospital_Admin_Add_PatientScreen_HospitalNameTextField;
    private javax.swing.JTextField Hospital_Admin_Add_PatientScreen_Id_Textfield;
    private javax.swing.JLabel Hospital_Admin_Add_PatientScreen_Label2;
    private javax.swing.JTextField Hospital_Admin_Add_PatientScreen_Phone_TextField;
    private javax.swing.JTextField Hospital_Admin_Add_PatientScreen_Pincode_TextField;
    private javax.swing.JLabel Hospital_Admin_Add_PatientScreen_Table_Label2;
    private javax.swing.JTextField Hospital_Admin_Add_PatientScreen_TextField2;
    private javax.swing.JPasswordField Hospital_Admin_Add_PatientScreen_Textfield;
    private javax.swing.JTextField Hospital_Admin_Add_PatientScreen__TextField;
    private javax.swing.JButton Hospital_Patient_Screen_DeleteButton;
    private javax.swing.JButton Hospital_Patient_Screen_UpdateButton;
    private javax.swing.JPanel Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel;
    private javax.swing.JButton Hospital_Screen_AddPatients_Tab_ResetButton;
    private javax.swing.JButton Hospital_Screen_Add_Doctor_AddButton;
    private javax.swing.JTable Hospital_Screen_Add_Doctor_AllDoctorsTable;
    private javax.swing.JButton Hospital_Screen_Add_Doctor_DeleteButton;
    private javax.swing.JComboBox<String> Hospital_Screen_Add_Doctor_DepartmentComboBox;
    private javax.swing.JButton Hospital_Screen_Add_Doctor_GetButton;
    private javax.swing.JLabel Hospital_Screen_Add_Doctor_Hospital_Name_Label;
    private javax.swing.JTextField Hospital_Screen_Add_Doctor_Id_Textfield;
    private javax.swing.JTextField Hospital_Screen_Add_Doctor_NameTextField;
    private javax.swing.JPasswordField Hospital_Screen_Add_Doctor_Password_TextField;
    private javax.swing.JTextField Hospital_Screen_Add_Doctor_Phone_TextField;
    private javax.swing.JButton Hospital_Screen_Add_Doctor_ResetButton;
    private javax.swing.JTextField Hospital_Screen_Add_Doctor_SearchDoctorId_TextField;
    private javax.swing.JLabel Hospital_Screen_Add_Doctor_Search_Label;
    private javax.swing.JLabel Hospital_Screen_Add_Doctor_Table_Title_Label;
    private javax.swing.JButton Hospital_Screen_Add_Doctor_UpdateButton;
    private javax.swing.JButton MainExitButton;
    private javax.swing.JLabel MainLabel;
    private javax.swing.JButton MainLogoutButton;
    private javax.swing.JTextField Patient_Screen_DoctorName_TextField;
    private javax.swing.JTable Patient_Screen_EncounterHistoryTable1;
    private javax.swing.JTextField Patient_Screen_Hospital_TextField;
    private javax.swing.JTextField Patient_Screen_PatientId_TextField;
    private javax.swing.JTextField Patient_Screen_PatientPhone_TextField;
    private javax.swing.JTextField Patient_Screen_Patient_Name_TextField;
    private javax.swing.JTextField Person_Registeration_Screen_AddressTextField;
    private javax.swing.JLabel Person_Registeration_Screen_Community_Label;
    private javax.swing.JComboBox<String> Person_Registeration_Screen_DepartmentComboBox;
    private javax.swing.JLabel Person_Registeration_Screen_DoctorId_Label;
    private javax.swing.JLabel Person_Registeration_Screen_DoctorId_Label1;
    private javax.swing.JLabel Person_Registeration_Screen_HospitalId_Label;
    private javax.swing.JLabel Person_Registeration_Screen_HospitalNameLabel;
    private javax.swing.JTextField Person_Registeration_Screen_PhoneTextField;
    private javax.swing.JTextField Person_Registeration_Screen_PinTextField;
    private javax.swing.JButton Person_Registeration_Screen_RegisterButton;
    private javax.swing.JButton Person_Registeration_Screen_ResetButton;
    private javax.swing.JList<String> Person_Registeration_Screen_SelectDoctorList;
    private javax.swing.JTextField Person_Registeration_Screen_idTextField;
    private javax.swing.JTextField Person_Registeration_Screen_nameTextField;
    private javax.swing.JPasswordField Person_Registeration_Screen_passwordTextField;
    private javax.swing.JTable Person_Screen_All_Hospitals_Table;
    private javax.swing.JLabel Person_Screen_Pincode_Label;
    private javax.swing.JTextField Person_Screen_Pincode_TextField;
    private javax.swing.JButton Person_Screen_Search_Button;
    private javax.swing.JLabel Person_Screen_Table_Label;
    private javax.swing.JButton Person_Screen_ViewAllButton;
    private javax.swing.JTextField hospital_Screen_HospitalIdTextField;
    private javax.swing.JButton hospital_Screen_add_hospital_button;
    private javax.swing.JPanel hospital_Screen_allHospitalsTablePanel;
    private javax.swing.JButton hospital_Screen_delete_button;
    private javax.swing.JTextField hospital_Screen_hospitalAddressTextField;
    private javax.swing.JTextField hospital_Screen_hospitalCityTextField;
    private javax.swing.JComboBox<String> hospital_Screen_hospitalCommunityComboBox;
    private javax.swing.JTextField hospital_Screen_hospitalNameTextField;
    private javax.swing.JTextField hospital_Screen_hospitalPincodeTextField;
    private javax.swing.JPasswordField hospital_Screen_password_TextField;
    private javax.swing.JLabel hospital_Screen_tableTitleLabel;
    private javax.swing.JButton hospital_Screen_update_button;
    private javax.swing.JPanel hospital_screen_delete_update_panel;
    private javax.swing.JLabel idlabel;
    private javax.swing.JLabel idlabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton superAdminDashboardScreenAdd_Details_Reset_Button;
    private javax.swing.JButton superAdminDashboardScreenAdd_Details_Reset_Button6;
    private javax.swing.JPanel superAdminDashboardScreen_Add_Panel10;
    private javax.swing.JPanel superAdminDashboardScreen_Add_Panel5;
    private javax.swing.JPanel superAdminDashboardScreen_Add_Panel6;
    private javax.swing.JPanel superAdminDashboardScreen_Add_Panel8;
    private javax.swing.JPanel superAdminDashboardScreen_DeleteUpdatePanel;
    private javax.swing.JPanel superAdminDashboardScreen_Reset_AddButtonPanel;
    private javax.swing.JPanel superAdminDashboardScreen_Update_Panel4;
    private javax.swing.JPanel superAdmin_Doctor_Screen_Add_Reset_Panel;
    private javax.swing.JPanel superAdmin_Doctor_Screen_Delete_UpdatePanel;
    private javax.swing.JPanel super_admin_doctor_screen_jpanel;
    private javax.swing.JPanel super_admin_doctor_screen_jpanel1;
    private javax.swing.JPanel super_admin_hospital_Screen_jPanel;
    private javax.swing.JButton superadmin_Doctors_Screen_Add_Button;
    private javax.swing.JTable superadmin_Doctors_Screen_All_Doctors_Table;
    private javax.swing.JButton superadmin_Doctors_Screen_Delete_Button;
    private javax.swing.JComboBox<String> superadmin_Doctors_Screen_Department_Combo_Box;
    private javax.swing.JList<String> superadmin_Doctors_Screen_Hospital_List;
    private javax.swing.JTextField superadmin_Doctors_Screen_Id_Textfield;
    private javax.swing.JTextField superadmin_Doctors_Screen_Name_TextField;
    private javax.swing.JPasswordField superadmin_Doctors_Screen_Password_Textfield;
    private javax.swing.JTextField superadmin_Doctors_Screen_Phone_TextField;
    private javax.swing.JButton superadmin_Doctors_Screen_Reset_Button;
    private javax.swing.JLabel superadmin_Doctors_Screen_Table_Label;
    private javax.swing.JButton superadmin_Doctors_Screen_UpdateButton;
    private javax.swing.JLabel superadmin_Doctors_Screen_doctor_id_label;
    private javax.swing.JLabel superadmin_Doctors_Screen_hospital_id_label;
    private javax.swing.JButton superadmin_Encounters_Screen_Add_Button;
    private javax.swing.JTextField superadmin_Encounters_Screen_BloodPressure_TextField;
    private javax.swing.JTextField superadmin_Encounters_Screen_Doctor_Name_TextField;
    private javax.swing.JTable superadmin_Encounters_Screen_EncounterHistoryTable;
    private javax.swing.JButton superadmin_Encounters_Screen_GetButton;
    private javax.swing.JTextField superadmin_Encounters_Screen_PatientNameTextField;
    private javax.swing.JTextField superadmin_Encounters_Screen_PatientPhoneTextField;
    private javax.swing.JTextField superadmin_Encounters_Screen_Patient_HospitalId_TextField;
    private javax.swing.JTextField superadmin_Encounters_Screen_Patient_Hospital_TextField;
    private javax.swing.JLabel superadmin_Encounters_Screen_SearchLabel;
    private javax.swing.JTextField superadmin_Encounters_Screen_SearchPatientID_TextField;
    private javax.swing.JLabel superadmin_Encounters_Screen_TableTitle_Label;
    private javax.swing.JLabel superadmin_Encounters_Screen_TableTitle_Label1;
    private javax.swing.JTextField superadmin_Encounters_Screen_TemperatureTextField;
    private javax.swing.JTextField superadmin_Encounters_Screen_patientIdTextField;
    private javax.swing.JTable superadmin_Hospitals_Screen_All_Hospitals_Table;
    private javax.swing.JButton superadmin_Patient_Screen_AddButton;
    private javax.swing.JTable superadmin_Patient_Screen_AllPatients_Table;
    private javax.swing.JButton superadmin_Patient_Screen_DeleteButton;
    private javax.swing.JTextField superadmin_Patient_Screen_PatientNameTextField;
    private javax.swing.JTextField superadmin_Patient_Screen_PatientPhone_TextField;
    private javax.swing.JTextField superadmin_Patient_Screen_Patient_Address_TextField;
    private javax.swing.JComboBox<String> superadmin_Patient_Screen_Patient_DepartmentComboBox;
    private javax.swing.JTextField superadmin_Patient_Screen_Patient_Pin_TextField;
    private javax.swing.JButton superadmin_Patient_Screen_ResetButton;
    private javax.swing.JList<String> superadmin_Patient_Screen_Select_DoctorList;
    private javax.swing.JList<String> superadmin_Patient_Screen_Select_HospitalList;
    private javax.swing.JLabel superadmin_Patient_Screen_TableTitle_Label;
    private javax.swing.JButton superadmin_Patient_Screen_UpdateButton;
    private javax.swing.JPasswordField superadmin_Patients_Screen_password_TextField;
    private javax.swing.JTextField superadmin_Patients_Screen_patientId_TextField;
    private javax.swing.JPanel superadmin_add_patient_screen_reset_add_panel;
    private javax.swing.JLabel superadmin_patient_patientId_label;
    private javax.swing.JLabel superadmin_patient_patientId_label1;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

    //Sets data on all hospitals table on superadmin dashboard
    private void setDataOnAllHospitalsTable(String tableNameToSet, DefaultTableModel defaultTableModel, ArrayList<Hospital> tableDataArrayList, JTable table) {


                
        table.setName(tableNameToSet);
        table.setPreferredSize(null);

        switch (table.getName()) {
            case "viewAllHospitalsTable" -> {
                for (int i = 0; i < tableDataArrayList.size(); i++) {
                    
                    if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("allston_admin"))
                    {
                           if (tableDataArrayList.get(i).getHospitalCommunity().equals("Allston"))
                           {
                        defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getHospitalID(),
                        tableDataArrayList.get(i).getHospitalName(),
                        tableDataArrayList.get(i).getHospitalCity(),
                        String.valueOf(tableDataArrayList.get(i).getHospitalPincode())
                    });
                           }
                    }
                    else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("mountain_view_admin"))
                    {
                    if (tableDataArrayList.get(i).getHospitalCommunity().equals("Mountain View"))
                           {
                        defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getHospitalID(),
                        tableDataArrayList.get(i).getHospitalName(),
                        tableDataArrayList.get(i).getHospitalCity(),
                        String.valueOf(tableDataArrayList.get(i).getHospitalPincode())
                    });                  
                           }
                    }
                    else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("back_bay_admin"))
                    {
                    if (tableDataArrayList.get(i).getHospitalCommunity().equals("Back Bay"))
                           {
                        defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getHospitalID(),
                        tableDataArrayList.get(i).getHospitalName(),
                        tableDataArrayList.get(i).getHospitalCity(),
                        String.valueOf(tableDataArrayList.get(i).getHospitalPincode())
                    });                  
                           }
                    }
                    else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("brighton_admin"))
                    {
                    if (tableDataArrayList.get(i).getHospitalCommunity().equals("Brighton"))
                           {
                        defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getHospitalID(),
                        tableDataArrayList.get(i).getHospitalName(),
                        tableDataArrayList.get(i).getHospitalCity(),
                        String.valueOf(tableDataArrayList.get(i).getHospitalPincode())
                    });                  
                           }
                    }
                    
                    else {
                        defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getHospitalID(),
                        tableDataArrayList.get(i).getHospitalName(),
                        tableDataArrayList.get(i).getHospitalCity(),
                        String.valueOf(tableDataArrayList.get(i).getHospitalPincode())
                    });   
                    }
                    
  
                
                
                }
                defaultTableModel.fireTableDataChanged();
                table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                table.getColumnModel().getColumn(0).setPreferredWidth(5);
                table.getColumnModel().getColumn(1).setPreferredWidth(5);
                table.getColumnModel().getColumn(2).setPreferredWidth(120);
                table.getColumnModel().getColumn(3).setPreferredWidth(30);
                table.getColumnModel().getColumn(4).setPreferredWidth(30);
                
                if (!HOSPITAL_SCREEN_TABLE_MOUSE_LISTENER_STATUS){
                table.addMouseListener(new MouseAdapter() {
                    
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                        Hospital hospitalToSelect = tableDataArrayList.get(table.getSelectedRow());
                            hospital_Screen_HospitalIdTextField.setText(hospitalToSelect.getHospitalID());
                            hospital_Screen_password_TextField.setText(hospitalToSelect.getAdminpassword());
                            hospital_Screen_hospitalNameTextField.setText(hospitalToSelect.getHospitalName());
                            hospital_Screen_hospitalAddressTextField.setText(hospitalToSelect.getHospitalAddress());
                            hospital_Screen_hospitalCityTextField.setText(hospitalToSelect.getHospitalCity());
                            hospital_Screen_hospitalPincodeTextField.setText(String.valueOf(hospitalToSelect.getHospitalPincode()));
                            hospital_Screen_hospitalCommunityComboBox.setSelectedItem(hospitalToSelect.getHospitalCommunity());
                            System.out.println("item is " + hospitalToSelect.getHospitalCommunity());
                            HOSPITAL_INDEX_TO_UPDATE_DELETE = getHospitalIndexAccordingToHospitalID(tableDataArrayList.get(table.getSelectedRow()).getHospitalID());
//                            HOSPITAL_INDEX_TO_UPDATE_DELETE = table.getSelectedRow();
                            System.out.println("index " + HOSPITAL_INDEX_TO_UPDATE_DELETE);
                            HOSPITAL_SCREEN_TABLE_MOUSE_LISTENER_STATUS = true;
                            superAdminDashboardScreen_DeleteUpdatePanel.setVisible(true);
                            table.clearSelection();
                    }
                }
            }); }
                
            }
            case "Person_Screen_AllHospitalsTable" -> {
                                   for (int i = 0; i < tableDataArrayList.size(); i++) {
                    defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getHospitalID(),
                        tableDataArrayList.get(i).getHospitalName(),
                        tableDataArrayList.get(i).getHospitalCity(),
                        String.valueOf(tableDataArrayList.get(i).getHospitalPincode())
                    });
                }
                defaultTableModel.fireTableDataChanged();
                table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                table.getColumnModel().getColumn(0).setPreferredWidth(5);
                table.getColumnModel().getColumn(1).setPreferredWidth(5);
                table.getColumnModel().getColumn(2).setPreferredWidth(120);
                table.getColumnModel().getColumn(3).setPreferredWidth(30);
                table.getColumnModel().getColumn(4).setPreferredWidth(30);
            table.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                        Hospital hospitalToSelect = tableDataArrayList.get(table.getSelectedRow());
                        if (!hospitalToSelect.getWorkingdoctorsArrayList().isEmpty()){
                        autofillPatientRegistrationDetails(hospitalToSelect);

                        }
                        else{
                        JOptionPane.showMessageDialog(null, "No doctors found in this hospital. Choose another hospital.");
                        }
                    }
                }
            });
            }

        }
    }
    
    private ArrayList<Hospital> filteredHospitalsAccordingToCommunity(String community)
    {
    ArrayList<Hospital> temphoArrayList = new ArrayList<>();
    if (!DataStorageClass.hospital_Screen_HospitalArrayList.isEmpty())
    {
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
           if (DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalCommunity().equals(community))
           {
               temphoArrayList.add(DataStorageClass.hospital_Screen_HospitalArrayList.get(i));
           }
        }
    }
    return temphoArrayList;
    }
    
    private void autofill_Doctor_Encounter_Screen(Patient patient)
    {
        superadmin_Encounters_Screen_SearchLabel.setVisible(false);
        superadmin_Encounters_Screen_SearchPatientID_TextField.setVisible(false);
        superadmin_Encounters_Screen_GetButton.setVisible(false);
    superadmin_Encounters_Screen_patientIdTextField.setText(patient.getPatientId());
    superadmin_Encounters_Screen_PatientNameTextField.setText(patient.getPatientName());
    superadmin_Encounters_Screen_PatientPhoneTextField.setText(patient.getPatientPhone());
    superadmin_Encounters_Screen_Patient_Hospital_TextField.setText(patient.getPatientHospitalName());
    superadmin_Encounters_Screen_Doctor_Name_TextField.setText(patient.getDoctorName());
    superadmin_Encounters_Screen_Patient_HospitalId_TextField.setText(patient.getPatientHospitalID());
    
           
            if (!patient.getEncountersArraylist().isEmpty()) {
                                superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                                setDataOnAllEncountersTable("viewAllEncountersTable", superadmin_Encounters_Screen_TableDataDefaultTableModel, patient.getEncountersArraylist(), superadmin_Encounters_Screen_EncounterHistoryTable);
                            }
                            else {
                                superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                            }
            getSelectedDoctor();
    
    }
    
    public void autofillPatientRegistrationDetails(Hospital hospital)
    {
        tabbedPane.setEnabledAt(1, true);
        tabbedPane.setSelectedIndex(1);
        Person_Registeration_Screen_HospitalId_Label.setText(hospital.getHospitalID());
        Person_Registeration_Screen_HospitalNameLabel.setText(hospital.getHospitalName());
        Person_Registeration_Screen_Community_Label.setText(hospital.getHospitalCommunity());
        person_screen_setdoctoraccordingtohospital(hospital, Person_Registeration_Screen_SelectDoctorList);
    }
    private void setDataOnAllEncountersTable(String tableNameToSet, DefaultTableModel defaultTableModel, ArrayList<Encounter> tableDataArrayList, JTable table) {
        table.setName(tableNameToSet);
        table.setPreferredSize(null);

        switch (table.getName()) {
            case "viewAllEncountersTable" -> {
                for (int i = 0; i < tableDataArrayList.size(); i++) {
                    defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                        tableDataArrayList.get(i).getTimestamp(),
                        tableDataArrayList.get(i).getTemperature(),
                        tableDataArrayList.get(i).getBloodpressure()
                    });
                }
                defaultTableModel.fireTableDataChanged();
                table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                table.getColumnModel().getColumn(0).setPreferredWidth(5);
                table.getColumnModel().getColumn(1).setPreferredWidth(30);
                table.getColumnModel().getColumn(2).setPreferredWidth(30);
                table.getColumnModel().getColumn(3).setPreferredWidth(30);
            }
        }
    }

    //Sets data to all Doctors table
    private void setDataOnAllDoctorsTable(String tableNameToSet, DefaultTableModel defaultTableModel, ArrayList<Doctor> tableDataArrayList, JTable table) {
        table.setName(tableNameToSet);
        table.setPreferredSize(null);

        for (int i = 0; i < tableDataArrayList.size(); i++) {
            defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                tableDataArrayList.get(i).getDoctorId(),
                tableDataArrayList.get(i).getDoctorName(),
                tableDataArrayList.get(i).getDepartmentName(),
                tableDataArrayList.get(i).getHospitalName()
            });
        }
        defaultTableModel.fireTableDataChanged();
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.getColumnModel().getColumn(0).setPreferredWidth(5);
        table.getColumnModel().getColumn(1).setPreferredWidth(5);
        table.getColumnModel().getColumn(2).setPreferredWidth(120);
        table.getColumnModel().getColumn(3).setPreferredWidth(30);
        table.getColumnModel().getColumn(4).setPreferredWidth(30);
        
       if (tableNameToSet.equals("HOSPITAL_viewAllDoctorsTable"))
       {
           
            if (!HOSTPITAL_ADD_DOCTORTABLE_MOUSE_LISTENER_STATUS)
            table.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                        Doctor doctor = new Doctor();
                        //doctor = doctorsArrayList.get(table.getSelectedRow());
                        doctor = tableDataArrayList.get(table.getSelectedRow());
                        HOSTPITAL_ADD_DOCTORTABLE_MOUSE_LISTENER_STATUS = true;
                        autofill_hospital_screen_add_doctor(doctor);
                                               
                    }
                }
            });
       
       }else if (tableNameToSet.equals("viewAllDoctorsTable")){
       
       if (!DOCTOR_SCREEN_TABLE_MOUSE_LISTENER_STATUS)
            table.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {       
                        DOCTOR_INDEX_TO_UPDATE_DELETE = table.getSelectedRow();
                        DOCTOR_SCREEN_TABLE_MOUSE_LISTENER_STATUS = true;
                        Doctor doctor = new Doctor();
                                                doctor = doctorsArrayList.get(table.getSelectedRow());

//                        doctor = tableDataArrayList.get(table.getSelectedRow());
                        System.out.print("listener called " + doctor.getDoctorName());
                        autofill_superadmin_add_doctor_data(doctor);
                        table.clearSelection();
                                               
                    }
                }
            });
       }
       
       else if (tableNameToSet.equals("viewAllDoctorsTableCommunityAdmin")){
       
       if (!COMMUNITY_ADMIN_DOCTOR_SCREEN_TABLE_MOUSE_LISTENER_STATUS)
            table.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {       
                        DOCTOR_INDEX_TO_UPDATE_DELETE = table.getSelectedRow();
                        COMMUNITY_ADMIN_DOCTOR_SCREEN_TABLE_MOUSE_LISTENER_STATUS = true;
                        Doctor doctor = new Doctor();
//                        doctor = tableDataArrayList.get(table.getSelectedRow());
                        doctor = doctorsArrayList.get(table.getSelectedRow());
                        autofill_superadmin_add_doctor_data(doctor);
                        table.clearSelection();
                                               
                    }
                }
            });
       }
       
        

    }
    
    private void autofill_hospital_screen_add_doctor(Doctor doctor)
    {
    Hospital_Screen_Add_Doctor_Id_Textfield.setText(doctor.getDoctorId());
    Hospital_Screen_Add_Doctor_Password_TextField.setText(doctor.getPassword());
    Hospital_Screen_Add_Doctor_NameTextField.setText(doctor.getDoctorName());
    Hospital_Screen_Add_Doctor_Phone_TextField.setText(doctor.getDoctorPhone());
    Hospital_Screen_Add_Doctor_DepartmentComboBox.setSelectedItem(doctor.getDepartmentName());
    Hospital_Screen_Add_Doctor_Hospital_Name_Label.setText(doctor.getHospitalName());
    hospital_screen_delete_update_panel.setVisible(true);
    }
    private void autofill_superadmin_add_doctor_data(Doctor doctor)
    {
        System.err.println("autofilled");
        superAdmin_Doctor_Screen_Delete_UpdatePanel.setVisible(true);
        superadmin_Doctors_Screen_Id_Textfield.setText(doctor.getDoctorId());
        superadmin_Doctors_Screen_Password_Textfield.setText(doctor.getPassword());
        superadmin_Doctors_Screen_Name_TextField.setText(doctor.getDoctorName());
        superadmin_Doctors_Screen_Phone_TextField.setText(doctor.getDoctorPhone());
        superadmin_Doctors_Screen_Department_Combo_Box.setSelectedItem(doctor.getDepartmentName());
        superadmin_Doctors_Screen_hospital_id_label.setText(doctor.getHospitalId());
        superadmin_Doctors_Screen_doctor_id_label.setText(doctor.getDoctorId());
        

    }
    //Sets data to all patients table
    private void setDataOnAllPatientsTable(String tableNameToSet, DefaultTableModel defaultTableModel, ArrayList<Patient> tableDataArrayList, JTable table) {
        table.setName(tableNameToSet);
        table.setPreferredSize(null);

        for (int i = 0; i < tableDataArrayList.size(); i++) {
            defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                tableDataArrayList.get(i).getPatientId(),
                tableDataArrayList.get(i).getPatientName(),
                tableDataArrayList.get(i).getdoctorName(),
                tableDataArrayList.get(i).getPatientHospitalName()
            });
        }
        defaultTableModel.fireTableDataChanged();
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.getColumnModel().getColumn(0).setPreferredWidth(10);
        table.getColumnModel().getColumn(1).setPreferredWidth(20);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        
        if (tableNameToSet.equals("DR_viewAssignedPatientsTable"))
        {
            table.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                        Patient patientToSelect = tableDataArrayList.get(table.getSelectedRow());
                        tabbedPane.setSelectedIndex(1);
                        autofill_Doctor_Encounter_Screen(patientToSelect);
                    }
                }
            });
        }
        
        else if (tableNameToSet.equals("HOSPITAL_viewAllPatientsTable"))
        {
            if (!HOSPITAL_SCREEN_PATIENTS_TABLE){
                    table.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                        System.out.print("selecteed row " + table.getSelectedRow());
                        Patient patientToSelect = DataStorageClass.hospital_Screen_HospitalArrayList.get(getHospitalIndex()).getEnrolledPatientsArrayList().get(table.getSelectedRow());
                        hospital_autofill_patientData(patientToSelect);
                    }
                }


            });
                    HOSPITAL_SCREEN_PATIENTS_TABLE = true;
            }
        }
        else if (tableNameToSet.equals("super_admin_hospital_selection_viewAllPatientsTable"))
        {
            if (!SUPERADMIN_ADD_PATIENT_TABLE_LISTENER){
                    table.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
//                        Patient patientToSelect = tableDataArrayList.get(table.getSelectedRow());
                        Patient patientToSelect = patientsArrayList.get(table.getSelectedRow());
                        superadmin_autofill_patientData(patientToSelect);
                        superAdminDashboardScreen_Update_Panel4.setVisible(true);
                        superadmin_patient_patientId_label.setText(patientToSelect.getPatientId());
                        superadmin_patient_patientId_label1.setText(patientToSelect.getPatientHospitalID());
                    }
                }
            });
            SUPERADMIN_ADD_PATIENT_TABLE_LISTENER = true;
            }
        }

    }
    
                            private void hospital_autofill_patientData(Patient patient) {
                                Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel.setVisible(true);
                                      Hospital_Admin_Add_PatientScreen_Id_Textfield.setText(patient.getPatientId());
       Hospital_Admin_Add_PatientScreen_Textfield.setText(patient.getPassword());
       Hospital_Admin_Add_PatientScreen__TextField.setText(patient.getPatientName());
       Hospital_Admin_Add_PatientScreen_Phone_TextField.setText(patient.getPatientPhone());
       Hospital_Admin_Add_PatientScreen_Address_TextField.setText(patient.getPatientAddress());
       Hospital_Admin_Add_PatientScreen_Pincode_TextField.setText(patient.getPatientPincode());
       Hospital_Admin_Add_PatientScreen_ComboBox.setSelectedItem(patient.getPatientDepartment().trim()); 
      }
    
    private void superadmin_autofill_patientData (Patient patient)
    {
        
       superadmin_Patients_Screen_patientId_TextField.setText(patient.getPatientId());
       superadmin_Patients_Screen_password_TextField.setText(patient.getPassword());
       superadmin_Patient_Screen_PatientNameTextField.setText(patient.getPatientName());
       superadmin_Patient_Screen_PatientPhone_TextField.setText(patient.getPatientPhone());
       superadmin_Patient_Screen_Patient_Address_TextField.setText(patient.getPatientAddress());
       superadmin_Patient_Screen_Patient_Pin_TextField.setText(patient.getPatientPincode());
       superadmin_Patient_Screen_Patient_DepartmentComboBox.setSelectedItem(patient.getPatientDepartment().trim());
    }
        //Sets data to all persons table
    private void setDataOnAllPersonsTable(String tableNameToSet, DefaultTableModel defaultTableModel, ArrayList<Person> tableDataArrayList, JTable table) {
        table.setName(tableNameToSet);
        table.setPreferredSize(null);

        for (int i = 0; i < tableDataArrayList.size(); i++) {
            defaultTableModel.addRow(new String[]{String.valueOf(i + 1),
                tableDataArrayList.get(i).getId(),
                tableDataArrayList.get(i).getName(),
                tableDataArrayList.get(i).getDoctorname(),
                tableDataArrayList.get(i).getHospitalname(),
                tableDataArrayList.get(i).getStatus()
            });
        }
        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.getColumnModel().getColumn(0).setPreferredWidth(10);
        table.getColumnModel().getColumn(1).setPreferredWidth(20);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        

    }

    private void initSuperUserEnountersScreen() {
//        PATIENT_ARRAYLIST_INDEX = -1;
//        HOSPITAL_ARRAYLIST_INDEX = -1;
        superadmin_Encounters_Screen_patientIdTextField.setText("");
        superadmin_Encounters_Screen_PatientNameTextField.setText("");
        superadmin_Encounters_Screen_PatientPhoneTextField.setText("");
        superadmin_Encounters_Screen_Patient_Hospital_TextField.setText("");
        superadmin_Encounters_Screen_Patient_HospitalId_TextField.setText("");
        superadmin_Encounters_Screen_Doctor_Name_TextField.setText("");
        superadmin_Encounters_Screen_TemperatureTextField.setText("");
        superadmin_Encounters_Screen_BloodPressure_TextField.setText("");
        superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
        superadmin_Encounters_Screen_EncounterHistoryTable.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
        superadmin_Encounters_Screen_EncounterHistoryTable.setPreferredSize(null);
    }

    private void initSuperUserAddHospitalScreen(ArrayList<Hospital> functionhospitalsarraylist) {
                if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("allston_admin"))
        {
            hospital_Screen_hospitalCommunityComboBox.removeAllItems();
            hospital_Screen_hospitalCommunityComboBox.addItem("Allston");
        }
                
                else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("mountain_view_admin"))
        {
            hospital_Screen_hospitalCommunityComboBox.removeAllItems();
            hospital_Screen_hospitalCommunityComboBox.addItem("Mountain View");
        }
                else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("back_bay_admin"))
        {
            hospital_Screen_hospitalCommunityComboBox.removeAllItems();
            hospital_Screen_hospitalCommunityComboBox.addItem("Back Bay");
        }
                else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("brighton_admin"))
        {
            hospital_Screen_hospitalCommunityComboBox.removeAllItems();
            hospital_Screen_hospitalCommunityComboBox.addItem("Brighton");
        }
                
        HOSPITAL_INDEX_TO_UPDATE_DELETE = -1;
        superAdminDashboardScreen_DeleteUpdatePanel.setVisible(false);
        hospital_Screen_HospitalIdTextField.setText("");
        hospital_Screen_password_TextField.setText("");
        hospital_Screen_hospitalNameTextField.setText("");
        hospital_Screen_hospitalAddressTextField.setText("");
        hospital_Screen_hospitalCityTextField.setText("");
        hospital_Screen_hospitalPincodeTextField.setText("");
        hospital_Screen_hospitalCommunityComboBox.setSelectedIndex(0);
        superadmin_Hospital_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "City", "Pincode"}, 0);
        superadmin_Hospitals_Screen_All_Hospitals_Table.setModel(superadmin_Hospital_Screen_TableDataDefaultTableModel);
        
        if (!functionhospitalsarraylist.isEmpty()) {
            showAddHospitalElements();
            setDataOnAllHospitalsTable("viewAllHospitalsTable", superadmin_Hospital_Screen_TableDataDefaultTableModel, functionhospitalsarraylist, superadmin_Hospitals_Screen_All_Hospitals_Table);
        } else {
            hideAddHospitalElements();
        }

    }

        private void person_screen_setdoctoraccordingtohospital(Hospital hospital, JList listToSet) {
        doctorsinhospital = new ArrayList<>();
        DefaultListModel doctorsListModel = new DefaultListModel();
        doctorsinhospital = hospital.getWorkingdoctorsArrayList();
        if (!doctorsinhospital.isEmpty()) {

            for (int i = 0; i < doctorsinhospital.size(); i++) {
                doctorsListModel.addElement(doctorsinhospital.get(i).getDoctorName());
            }
        }
        
        listToSet.setModel(doctorsListModel);
        selectPersonScreenDoctorListSelectionListener = (ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                JList source = (JList) event.getSource();
                if (source.getSelectedValue() != null) {
                   Person_Registeration_Screen_DoctorId_Label.setText(doctorsinhospital.get(listToSet.getSelectedIndex()).getDoctorId());
                }
            }
        };
        listToSet.addListSelectionListener(selectPersonScreenDoctorListSelectionListener);
    }
        
    private void setdoctoraccordingtohospital(int selectedHospitalIndex, JList listToSet) {
        doctorsinhospital = new ArrayList<>();
        patientsArrayList = new ArrayList<>();
        DefaultListModel doctorsListModel = new DefaultListModel();
        doctorsinhospital = DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getWorkingdoctorsArrayList();
        if (!doctorsinhospital.isEmpty()) {

            for (int i = 0; i < doctorsinhospital.size(); i++) {
                doctorsListModel.addElement(doctorsinhospital.get(i).getDoctorName());
            }
        }
        superadmin_Patient_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Doctor", "Hospital"}, 0);
        superadmin_Patient_Screen_AllPatients_Table.setModel(superadmin_Patient_Screen_TableDataDefaultTableModel);
        listToSet.setModel(doctorsListModel);
        patientsArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(selectedHospitalIndex).getEnrolledPatientsArrayList();        
                if (!patientsArrayList.isEmpty()) {
            showAddPatientElements();
            setDataOnAllPatientsTable("super_admin_hospital_selection_viewAllPatientsTable", superadmin_Patient_Screen_TableDataDefaultTableModel, patientsArrayList, superadmin_Patient_Screen_AllPatients_Table);
        } else {
            hideAddPatientElements();
        }
        
    }

//    
//       private void initHospital_AddPatientScreen(ArrayList<Hospital> functionhospitalsarraylist) {
//        Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel.setVisible(false);
//           Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Doctor", "Hospital"}, 0);
//        Hospital_Admin_Add_PatientScreen_All_Patients_Table.setModel(Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel);
//        Hospital_Admin_Add_PatientScreen_All_Patients_Table.setPreferredSize(null);
//            
//        doctorsDefaultListModel = new DefaultListModel();
//        
//        Hospital hospital = new Hospital();
//        
//        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
//        {
//        if (DataStorageClass.USERID.equals(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID()))
//        {
//            hospital = DataStorageClass.hospital_Screen_HospitalArrayList.get(i);
//            i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
//        }
//        }
//        
//        Hospital_Admin_Add_PatientScreen_HospitalNameTextField.setText(hospital.getHospitalName());
//        Hospital_Admin_Add_PatientScreen_HospitaIdTextField.setText(hospital.getHospitalID());
//        ArrayList<Doctor> doctorArrayList = new ArrayList<>();
//         doctorArrayList.addAll(hospital.getWorkingdoctorsArrayList());
//        
//        if (!doctorArrayList.isEmpty()){
//        for (int i = 0; i < doctorArrayList.size(); i++) {
//            doctorsDefaultListModel.addElement(doctorArrayList.get(i).getDoctorName());
//        }
//        
//        }
// 
//        Hospital_Admin_Add_PatientScreen_DoctorList.setModel(doctorsDefaultListModel);
//
//        Hospital_Admin_Select_DoctorListSelectionListener = (ListSelectionEvent event) -> {
//            if (!event.getValueIsAdjusting()) {
//                JList source = (JList) event.getSource();
//                if (source.getSelectedValue() != null) {
//                   Hospital_Admin_Add_PatientScreen_DoctorIDTextField.setText(doctorArrayList.get(Hospital_Admin_Add_PatientScreen_DoctorList.getSelectedIndex()).getDoctorId());
//                }
//            }
//        };
//
//        Hospital_Admin_Add_PatientScreen_DoctorList.addListSelectionListener(Hospital_Admin_Select_DoctorListSelectionListener);
//        
//        ArrayList<Patient> patientsArrayList = new ArrayList<>();
//        for (int i = 0; i < functionhospitalsarraylist.size(); i++) {
//            if (!functionhospitalsarraylist.get(i).getEnrolledPatientsArrayList().isEmpty()) {
//                patientsArrayList.addAll(functionhospitalsarraylist.get(i).getEnrolledPatientsArrayList());
//            }
//        }
//        
//        
//        
//        System.out.println("patient array list " + patientsArrayList.size());
//        if (!patientsArrayList.isEmpty()) {
//            setDataOnAllPatientsTable("viewAllPatientsTable", Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel, patientsArrayList, Hospital_Admin_Add_PatientScreen_All_Patients_Table);
//        } else {
//        }
//    }
       
       
    private void initSuperUserAddPatientScreen(ArrayList<Hospital> functionhospitalsarraylist) {
       
               superadmin_Patients_Screen_patientId_TextField.setText("");
        superadmin_Patients_Screen_password_TextField.setText("");
        superadmin_Patient_Screen_PatientNameTextField.setText("");
        superadmin_Patient_Screen_PatientPhone_TextField.setText("");
        superadmin_Patient_Screen_Patient_Address_TextField.setText("");
        superadmin_Patient_Screen_Patient_Pin_TextField.setText("");
        
        if (USER_ROLE.equals("SUPER_ADMIN"))
        {
        

        superadmin_patient_patientId_label.setText("-");
        superadmin_patient_patientId_label1.setText("-");
        superAdminDashboardScreen_Update_Panel4.setVisible(false);
        superadmin_Patient_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Doctor", "Hospital"}, 0);
        superadmin_Patient_Screen_AllPatients_Table.setModel(superadmin_Patient_Screen_TableDataDefaultTableModel);
        superadmin_Patient_Screen_AllPatients_Table.setPreferredSize(null);
        hospitalDefaultListModel = new DefaultListModel();
        for (int i = 0; i < functionhospitalsarraylist.size(); i++) {
        hospitalDefaultListModel.addElement(functionhospitalsarraylist.get(i).getHospitalName());
        }
        
        selectHospitalIListSelectionListener = (ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                JList source = (JList) event.getSource();
                if (source.getSelectedValue() != null) {
                    superAdminDashboardScreen_Update_Panel4.setVisible(false);
                    setdoctoraccordingtohospital(source.getSelectedIndex(), superadmin_Patient_Screen_Select_DoctorList);
                }
            }
        };

        superadmin_Patient_Screen_Select_HospitalList.setModel(hospitalDefaultListModel);
        superadmin_Patient_Screen_Select_HospitalList.addListSelectionListener(selectHospitalIListSelectionListener);
        }
        
        else if (USER_ROLE.equals("COMMUNITY_ADMIN"))
        {
        filteredHospitalsforDoctorsScreenCommunityAdmin = new ArrayList<>();
        superadmin_patient_patientId_label.setText("-");
        superadmin_patient_patientId_label1.setText("-");
        superAdminDashboardScreen_Update_Panel4.setVisible(false);
        superadmin_Patient_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Doctor", "Hospital"}, 0);
        superadmin_Patient_Screen_AllPatients_Table.setModel(superadmin_Patient_Screen_TableDataDefaultTableModel);
        superadmin_Patient_Screen_AllPatients_Table.setPreferredSize(null);
        hospitalDefaultListModel = new DefaultListModel();
        
        for (int i = 0; i < functionhospitalsarraylist.size(); i++) {
            if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("mountain_view_admin")){
                
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Mountain View")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            }
            }
            
            else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("allston_admin")){
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Allston")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            }
            }
            
            else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("back_bay_admin")){
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Back Bay")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            }
            }
            
            else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("brighton_admin")){
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Brighton")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            }
            }
            
        }
        
        if (!filteredHospitalsforDoctorsScreenCommunityAdmin.isEmpty())
        {
            for (int i = 0; i < filteredHospitalsforDoctorsScreenCommunityAdmin.size(); i++){
        hospitalDefaultListModel.addElement(filteredHospitalsforDoctorsScreenCommunityAdmin.get(i).getHospitalName());
            }
        }
        
        
        selectHospitalIListSelectionListener = (ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                JList source = (JList) event.getSource();
                if (source.getSelectedValue() != null) {
                    superAdminDashboardScreen_Update_Panel4.setVisible(false);
                    
                    setdoctoraccordingtohospital(getHospitalIndexAccordingToHospitalID(filteredHospitalsforDoctorsScreenCommunityAdmin.get(source.getSelectedIndex()).getHospitalID()), superadmin_Patient_Screen_Select_DoctorList);
                }
            }
        };

        superadmin_Patient_Screen_Select_HospitalList.setModel(hospitalDefaultListModel);
        superadmin_Patient_Screen_Select_HospitalList.addListSelectionListener(selectHospitalIListSelectionListener);
            
        }
        



        
        
    }

    private void initSuperUserAddDoctorScreen(ArrayList<Hospital> functionhospitalsarraylist) {

        DOCTOR_INDEX_TO_UPDATE_DELETE = -1;
        superadmin_Doctors_Screen_Id_Textfield.setText("");
        superadmin_Doctors_Screen_Password_Textfield.setText("");
        superadmin_Doctors_Screen_Name_TextField.setText("");
        superadmin_Doctors_Screen_Phone_TextField.setText("");
        superadmin_Doctors_Screen_Department_Combo_Box.setSelectedIndex(0);
        superadmin_Doctors_Screen_Hospital_List.clearSelection();
        superAdmin_Doctor_Screen_Delete_UpdatePanel.setVisible(false);
        superadmin_Doctors_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        superadmin_Doctors_Screen_All_Doctors_Table.setModel(superadmin_Doctors_Screen_TableDataDefaultTableModel);
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(null);

        hospitalDefaultListModel = new DefaultListModel();
        for (int i = 0; i < functionhospitalsarraylist.size(); i++) {
            

            
           hospitalDefaultListModel.addElement(functionhospitalsarraylist.get(i).getHospitalName());
           
            
        }
        superadmin_Doctors_Screen_Hospital_List.setModel(hospitalDefaultListModel);
        
        if (!SUPER_ADMIN_ADD_DOCTOR_LISTENER){
        superadmin_select_doctor_add_doctor_screen_listener = (ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                JList source = (JList) event.getSource();
                if (source.getSelectedValue() != null) {
                    doctorsArrayList = new ArrayList<>();
                    doctorsArrayList = functionhospitalsarraylist.get(source.getSelectedIndex()).getWorkingdoctorsArrayList();
                            if (!doctorsArrayList.isEmpty()) {
            showAddDoctorsElements();
            
                    superadmin_Doctors_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        superadmin_Doctors_Screen_All_Doctors_Table.setModel(superadmin_Doctors_Screen_TableDataDefaultTableModel);
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(null);
            setDataOnAllDoctorsTable("viewAllDoctorsTable", superadmin_Doctors_Screen_TableDataDefaultTableModel, doctorsArrayList, superadmin_Doctors_Screen_All_Doctors_Table);
        } else {
                                superadmin_Doctors_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        superadmin_Doctors_Screen_All_Doctors_Table.setModel(superadmin_Doctors_Screen_TableDataDefaultTableModel);
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(null);
            hideAddDoctorElements();
        }
                }
            }
        };
        SUPER_ADMIN_ADD_DOCTOR_LISTENER = true;
        }

 superadmin_Doctors_Screen_Hospital_List.addListSelectionListener(superadmin_select_doctor_add_doctor_screen_listener);


    }
    
    
        private void initSuperUserAddDoctorScreenCommunityAdmin(ArrayList<Hospital> functionhospitalsarraylist) {
        filteredHospitalsforDoctorsScreenCommunityAdmin = new ArrayList<>();
       

        
        DOCTOR_INDEX_TO_UPDATE_DELETE = -1;
        superadmin_Doctors_Screen_Id_Textfield.setText("");
        superadmin_Doctors_Screen_Password_Textfield.setText("");
        superadmin_Doctors_Screen_Name_TextField.setText("");
        superadmin_Doctors_Screen_Phone_TextField.setText("");
        superadmin_Doctors_Screen_Department_Combo_Box.setSelectedIndex(0);
        superadmin_Doctors_Screen_Hospital_List.clearSelection();
        superAdmin_Doctor_Screen_Delete_UpdatePanel.setVisible(false);
        superadmin_Doctors_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        superadmin_Doctors_Screen_All_Doctors_Table.setModel(superadmin_Doctors_Screen_TableDataDefaultTableModel);
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(null);

        hospitalDefaultListModel = new DefaultListModel();
        
        
        for (int i = 0; i < functionhospitalsarraylist.size(); i++) {
            
            if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("mountain_view_admin")){
                
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Mountain View")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            hospitalDefaultListModel.addElement(functionhospitalsarraylist.get(i).getHospitalName());
            }
            }
            
            else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("allston_admin")){
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Allston")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            hospitalDefaultListModel.addElement(functionhospitalsarraylist.get(i).getHospitalName());
            }
           }
            else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("back_bay_admin")){
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Back Bay")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            hospitalDefaultListModel.addElement(functionhospitalsarraylist.get(i).getHospitalName());
            }
           }
            else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN") && DataStorageClass.USERID.equals("brighton_admin")){
            if (functionhospitalsarraylist.get(i).getHospitalCommunity().equals("Brighton")) {   
            filteredHospitalsforDoctorsScreenCommunityAdmin.add(functionhospitalsarraylist.get(i));
            hospitalDefaultListModel.addElement(functionhospitalsarraylist.get(i).getHospitalName());
            }
           }
        }
        
        
        superadmin_Doctors_Screen_Hospital_List.setModel(hospitalDefaultListModel);
        
        if (!SUPER_ADMIN_ADD_DOCTOR_LISTENER){
        superadmin_select_doctor_add_doctor_screen_listener = (ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                JList source = (JList) event.getSource();
                if (source.getSelectedValue() != null) {
                     doctorsArrayList = new ArrayList<>();
                    doctorsArrayList = filteredHospitalsforDoctorsScreenCommunityAdmin.get(source.getSelectedIndex()).getWorkingdoctorsArrayList();
                            if (!doctorsArrayList.isEmpty()) {
            showAddDoctorsElements();
            
                    superadmin_Doctors_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        superadmin_Doctors_Screen_All_Doctors_Table.setModel(superadmin_Doctors_Screen_TableDataDefaultTableModel);
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(null);
            setDataOnAllDoctorsTable("viewAllDoctorsTableCommunityAdmin", superadmin_Doctors_Screen_TableDataDefaultTableModel, doctorsArrayList, superadmin_Doctors_Screen_All_Doctors_Table);
        } else {
                                superadmin_Doctors_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        superadmin_Doctors_Screen_All_Doctors_Table.setModel(superadmin_Doctors_Screen_TableDataDefaultTableModel);
        superadmin_Doctors_Screen_All_Doctors_Table.setPreferredSize(null);
            hideAddDoctorElements();
        }
                }
            }
        };
        SUPER_ADMIN_ADD_DOCTOR_LISTENER = true;
        }

 superadmin_Doctors_Screen_Hospital_List.addListSelectionListener(superadmin_select_doctor_add_doctor_screen_listener);


    }
        
        
        
    private void initRegisterPatientScreen()
    {
    Person_Registeration_Screen_idTextField.setText("");
    Person_Registeration_Screen_passwordTextField.setText("");
    Person_Registeration_Screen_nameTextField.setText("");
    Person_Registeration_Screen_PhoneTextField.setText("");
    Person_Registeration_Screen_AddressTextField.setText("");
    Person_Registeration_Screen_PinTextField.setText("");
    }
    
    private void initHospitalUserAddDoctorScreen(ArrayList<Hospital> functionhospitalsarraylist){
        hospital_screen_delete_update_panel.setVisible(false);
        
            Hospital_Screen_Add_Doctor_Id_Textfield.setText("");
    Hospital_Screen_Add_Doctor_Password_TextField.setText("");
    Hospital_Screen_Add_Doctor_NameTextField.setText("");
    Hospital_Screen_Add_Doctor_Phone_TextField.setText("");
    Hospital_Screen_Add_Doctor_DepartmentComboBox.setSelectedIndex(0);
    Hospital_Screen_Add_Doctor_Hospital_Name_Label.setText("");
        
        Hospital_Screen_Add_Doctor_AllDoctorsTableDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Department", "Hospital"}, 0);
        Hospital_Screen_Add_Doctor_AllDoctorsTable.setModel(Hospital_Screen_Add_Doctor_AllDoctorsTableDefaultTableModel);
        Hospital_Screen_Add_Doctor_AllDoctorsTable.setPreferredSize(null);
        
        Hospital hospital = new Hospital();
        
        hospital = getSelecteHospital();
        
        Hospital_Screen_Add_Doctor_Hospital_Name_Label.setText(hospital.getHospitalName());
        
        ArrayList<Doctor> doctorsArrayList = new ArrayList<>();
            
        doctorsArrayList = hospital.getWorkingdoctorsArrayList();
        if (!doctorsArrayList.isEmpty()) {
            showAddDoctorsElements();
            setDataOnAllDoctorsTable("HOSPITAL_viewAllDoctorsTable", Hospital_Screen_Add_Doctor_AllDoctorsTableDefaultTableModel, doctorsArrayList, Hospital_Screen_Add_Doctor_AllDoctorsTable);
        } else {
            hideAddDoctorElements();
        }    
    }
    private Hospital getSelecteHospital()
    {
       Hospital hospital = new Hospital();
        
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
        if (DataStorageClass.USERID.equals(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID()))
        {
            hospital = DataStorageClass.hospital_Screen_HospitalArrayList.get(i);
            i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
        }
        }
        return hospital;
    }
    
    private int getHospitalIndex()
    {
            for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
        if (DataStorageClass.USERID.equals(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID()))
        {
            return i;

        }

        }
        return -1;
    }
    
    
        private int getHospitalIndexAccordingToHospitalID(String hospitalID)
    {
            for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
        if (hospitalID.equals(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID()))
        {
            return i;
        }

        }
        return -1;
    }
    
    private Doctor getSelectedDoctor()
    {
        Doctor doctor = new Doctor();
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
        ArrayList<Doctor> doctorslist = new ArrayList();
        doctorslist = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getWorkingdoctorsArrayList();
        if (!doctorslist.isEmpty() ){
        for (int j = 0; j < doctorslist.size(); j ++)
        {   
//            System.out.print("hospital id " + doctorslist.get(j).getHospitalId());
            if (doctorslist.get(j).getDoctorId().equals(DataStorageClass.USERID))
                    {
                        DataStorageClass.DOCTOR_HOSPITALID = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID();
                        doctor = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getWorkingdoctorsArrayList().get(j);
                        j = doctorslist.size();
                        i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
                    }
        }
        }
        }
        
        Patient patient = new Patient();
        ArrayList<Patient> finalpatientArrayList = new ArrayList<>();
        ArrayList<Patient> temppatientArrayList = new ArrayList<>();
        ArrayList<Doctor> doctorArrayList = new ArrayList<>();
        
//        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
//        {
//        if (DataStorageClass.DOCTOR_HOSPITALID.equals(DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getHospitalID()))
//        {
//            doctorArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getWorkingdoctorsArrayList();
//            i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
//        }
//        }

//        
//        for (int i = 0; i < doctorArrayList.size(); i++)
//        {
//            if (doctorArrayList.get(i).getDoctorId().equals(DataStorageClass.USERID))
//            {
//            doctor = doctorArrayList.get(i);
//            i = doctorArrayList.size();
//            }
//        }
        
        for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++)
        {
            temppatientArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList();
            
            if (!temppatientArrayList.isEmpty())
            {
               for (int j = 0; j < temppatientArrayList.size(); j++)
               {
                   if (temppatientArrayList.get(j).getDoctorId().equals(doctor.getDoctorId()))
                   {
                   finalpatientArrayList.add(temppatientArrayList.get(j));
                   }
               }
            }
        }
        
        doctor.setAssignedPatients(finalpatientArrayList);
        
    return doctor;
    }
    

    //Hides elements on 'Add Patients' Superadmin Screen
    private void hideAddPatientElements() {
        superadmin_Patient_Screen_TableTitle_Label.setText("No Patients Found. Please add at least one patient");

    }
    //Shows elements on 'Add Patients' Superadmin Screen

    private void showAddPatientElements() {
        superadmin_Patient_Screen_TableTitle_Label.setText("All Patients");

    }

    //Hides elements on 'Add Doctors' Superadmin Screen
    private void hideAddDoctorElements() {
        superadmin_Doctors_Screen_Table_Label.setText("No Doctors Found. Please add at least one doctor");

    }
    //Shows elements on 'Add Doctors' Superadmin Screen

    private void showAddDoctorsElements() {
        superadmin_Doctors_Screen_Table_Label.setText("Doctors");

    }

    //Shows elements on 'Add Hospital' Superadmin Screen    
    private void showAddHospitalElements() {
        hospital_Screen_tableTitleLabel.setText("All Hospitals");

    }
    //Hides elements on 'Add Hospital' Superadmin Screen

    private void hideAddHospitalElements() {
        hospital_Screen_tableTitleLabel.setText("No Hospitals Found. Please add at least one hospital");
    }

    private void initTabChangeListeners() {
USER_ROLE = DataStorageClass.USERROLE;
//int delay = 1000;
//
//
//        if (USER_ROLE.equals("SUPER_ADMIN"))
//        {
//
//           Timer timer = new Timer( delay, (ActionEvent e) -> {
//    System.out.println("count it" + tabbedPane.getTabCount());
//
//});
//timer.setRepeats( false );
//timer.start();
        if ((USER_ROLE.equals("SUPER_ADMIN")) || USER_ROLE.equals("COMMUNITY_ADMIN")) {

            tabbedPane.remove(tabbedPane.getTabCount() - 2);
            tabbedPane.remove(tabbedPane.getTabCount() - 4);
            tabbedPane.remove(tabbedPane.getTabCount() - 4);
            tabbedPane.remove(tabbedPane.getTabCount() - 4);
            tabbedPane.remove(tabbedPane.getTabCount() - 4);
            tabbedPane.remove(tabbedPane.getTabCount() - 4);

            tabbedPane.addChangeListener(new ChangeListener() {
                public void stateChanged(ChangeEvent e) {
                    //TODO Disable other tabs hospital_management_system_jTabbedPane.setEnabledAt(0,false);

                    switch (tabbedPane.getSelectedIndex()) {
                        case 0 -> {
                            initSuperUserAddHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
                        }
                        case 1 -> {
                            
                            if (USER_ROLE.equals("COMMUNITY_ADMIN")){
                            initSuperUserAddDoctorScreenCommunityAdmin(DataStorageClass.hospital_Screen_HospitalArrayList);}
                            else{
                            initSuperUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
                            }
                        }
                        case 2 -> {
                            initSuperUserEnountersScreen();                        
                        }
                        case 3 -> {
                            initSuperUserApprovePatientsScreen(DataStorageClass.person_registration_ArrayList);
                        }
                        case 4 -> {
                            initSuperUserAddPatientScreen(DataStorageClass.hospital_Screen_HospitalArrayList);

                        }

                    }

                }
            });
        } else if (USER_ROLE.equals("HOSPITAL")) {
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            Hospital hospital = getSelecteHospital();
            initHospital_Screen_AddPatient(hospital);
            
//            initHospital_AddPatientScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
            tabbedPane.addChangeListener(new ChangeListener() {
                public void stateChanged(ChangeEvent e) {
                    //TODO Disable other tabs hospital_management_system_jTabbedPane.setEnabledAt(0,false);

                    switch (tabbedPane.getSelectedIndex()) {
                        case 0 -> {
                            initHospital_Screen_AddPatient(hospital);
                        }
                        case 1 -> {
                            initSuperUserEnountersScreen();
                        }
                        case 2 -> {
                            initSuperUserApprovePatientsScreen(DataStorageClass.person_registration_ArrayList);                        
                        }
                        case 3 -> {
                            initHospitalUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
                        }
                    }

                }
            });
    }
        
        
        else if (USER_ROLE.equals("PERSON")) {

            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(tabbedPane.getTabCount() - 1); 
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            
            tabbedPane.setEnabledAt(1, false);
            initPersonSearchHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
            tabbedPane.addChangeListener(new ChangeListener() {
                public void stateChanged(ChangeEvent e) {
                    /*TODO Change case to 0 & 1 later*/

                    switch (tabbedPane.getSelectedIndex()) {
                        case 0 -> {
                            initPersonSearchHospitalScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
                        }
                        case 1 -> {
                            initRegisterPatientScreen();
//                            initSuperUserAddDoctorScreen(DataStorageClass.hospital_Screen_HospitalArrayList);
                        }

                    }

                }

            }
            );
        } else if (USER_ROLE.equals("DOCTOR")) {
            
            initDoctor_AllPatients_Screen(getSelectedDoctor());
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
 

            tabbedPane.addChangeListener(new ChangeListener() {
                public void stateChanged(ChangeEvent e) {
                    /*TODO Change case to 0 & 1 later*/

                    switch (tabbedPane.getSelectedIndex()) {
                        case 0 -> {
                        }
                        case 1 -> {
                        }

                    }

                }

            }
            );
        } else if (USER_ROLE.equals("PATIENT"))
        {
            initPatient_Screen_EncounterHistory();

            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(tabbedPane.getTabCount()-1);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            tabbedPane.remove(0);
            



        }
    }
    
        private void initSuperUserApprovePatientsScreen(ArrayList<Person> personArrayList) {
        superadmin_approvepatientsscreen_all_persons_table_DefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Doctor", "Hospital", "Status"}, 0);
        Approve_Patients_Screen_Table.setModel(superadmin_approvepatientsscreen_all_persons_table_DefaultTableModel);
        Approve_Patients_Screen_Table.setPreferredSize(null);
        
        if (!DataStorageClass.person_registration_ArrayList.isEmpty())
        {
            for (int i = 0; i < personArrayList.size(); i++)
            {
                if (DataStorageClass.person_registration_ArrayList.get(i).getStatus().equals("Approved"))
                {
                DataStorageClass.person_registration_ArrayList.remove(i);
                }
            }
        }
        
        if (!personArrayList.isEmpty())
        {
                 for (int i = 0; i < personArrayList.size(); i++)
            {
                if (personArrayList.get(i).getStatus().equals("Approved"))
                {
                personArrayList.remove(i);
                }
            }
        }
        
        if (USER_ROLE.equals("SUPER_ADMIN")){
        
        if (!personArrayList.isEmpty()) {
            showSuperadmin_ApprovePatients_Screen_Elements();
            setDataOnAllPersonsTable("viewAllPersonsTable", superadmin_approvepatientsscreen_all_persons_table_DefaultTableModel, personArrayList, Approve_Patients_Screen_Table);
        } else {
            hideSuperadmin_ApprovePatients_Screen_Elements();
        }
        } else if (USER_ROLE.equals("HOSPITAL"))
        {showSuperadmin_ApprovePatients_Screen_Elements();
            filteredHospitalPersonsArrayList = new ArrayList<>();
            if (!personArrayList.isEmpty())
            {
            
            for (int i = 0; i < personArrayList.size(); i++)
            {
                if ((personArrayList.get(i).getHospitalid().equals(getSelecteHospital().getHospitalID())))
                filteredHospitalPersonsArrayList.add(personArrayList.get(i));
            }
            
            if (!filteredHospitalPersonsArrayList.isEmpty()){
           setDataOnAllPersonsTable("viewAllPersonsTable", superadmin_approvepatientsscreen_all_persons_table_DefaultTableModel, filteredHospitalPersonsArrayList, Approve_Patients_Screen_Table);
            } else {
           hideSuperadmin_ApprovePatients_Screen_Elements();
            }
            }else {
            hideSuperadmin_ApprovePatients_Screen_Elements();
        }
        }
        
         else if (DataStorageClass.USERROLE.equals("COMMUNITY_ADMIN"))
        {
            showSuperadmin_ApprovePatients_Screen_Elements();
            filteredHospitalPersonsArrayList = new ArrayList<>();
            if (!personArrayList.isEmpty())
            {
            
            for (int i = 0; i < personArrayList.size(); i++)
            {
                 if (DataStorageClass.USERID.equals("allston_admin")){
                 if ((personArrayList.get(i).getCommunity().equals("Allston")))
                filteredHospitalPersonsArrayList.add(personArrayList.get(i));
                 }
                 
                 else if (DataStorageClass.USERID.equals("mountain_view_admin")){
                if ((personArrayList.get(i).getCommunity().equals("Mountain View")))
                filteredHospitalPersonsArrayList.add(personArrayList.get(i));
                 }
                 
                 else if (DataStorageClass.USERID.equals("back_bay_admin")){
                if ((personArrayList.get(i).getCommunity().equals("Back Bay")))
                filteredHospitalPersonsArrayList.add(personArrayList.get(i));
                 }
                 
                 else if (DataStorageClass.USERID.equals("brighton_admin")){
                if ((personArrayList.get(i).getCommunity().equals("Brighton")))
                filteredHospitalPersonsArrayList.add(personArrayList.get(i));
                 }
            }
            
            if (!filteredHospitalPersonsArrayList.isEmpty()){
           setDataOnAllPersonsTable("viewAllPersonsTable", superadmin_approvepatientsscreen_all_persons_table_DefaultTableModel, filteredHospitalPersonsArrayList, Approve_Patients_Screen_Table);
            } else {
           hideSuperadmin_ApprovePatients_Screen_Elements();
            }
            }else {
            hideSuperadmin_ApprovePatients_Screen_Elements();
        }
        }
        
        
       
    }

    private void initDoctor_AllPatients_Screen(Doctor doctor) {
        doctor_Screen_All_Patients_Table_DefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Hospital", "Department"}, 0);
        Doctor_Assigned_Patients_Screen_AssignedPatients_Table.setModel(doctor_Screen_All_Patients_Table_DefaultTableModel);
        Doctor_Assigned_Patients_Screen_AssignedPatients_Table.setPreferredSize(null);
        if (!doctor.getAssignedPatients().isEmpty()) {
            showDoctor_AssignedPatients_Elements();
            setDataOnAllPatientsTable("DR_viewAssignedPatientsTable", doctor_Screen_All_Patients_Table_DefaultTableModel, doctor.getAssignedPatients(), Doctor_Assigned_Patients_Screen_AssignedPatients_Table);
        } else {
            hideDoctor_AssignedPatients_Elements();
        }
    }
    
    private void initPersonSearchHospitalScreen(ArrayList<Hospital> functionhospitalsarraylist) {
        person_Screen_hospitals_table_DefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "City", "Pincode"}, 0);
        Person_Screen_All_Hospitals_Table.setModel(person_Screen_hospitals_table_DefaultTableModel);
        Person_Screen_All_Hospitals_Table.setPreferredSize(null);
        tabbedPane.setEnabledAt(1, false);
        if (!functionhospitalsarraylist.isEmpty()) {
            showPersonScreenElements();
            setDataOnAllHospitalsTable("Person_Screen_AllHospitalsTable", person_Screen_hospitals_table_DefaultTableModel, functionhospitalsarraylist, Person_Screen_All_Hospitals_Table);
        } else {
            hidePersonScreenElements();
        }
    }
    
            private void showSuperadmin_ApprovePatients_Screen_Elements() {
        Approve_Patients_Screen_Table_Title.setText("New Unapproved Persons");
        Approve_Patients_Screen_ApproveButton.setVisible(true);
  
    }
        
        private void hideSuperadmin_ApprovePatients_Screen_Elements() {
        Approve_Patients_Screen_Table_Title.setText("No Unapproved Persons Found");
        Approve_Patients_Screen_ApproveButton.setVisible(false);

    }
    
        private void showDoctor_AssignedPatients_Elements() {
        Doctor_Assigned_Patients_Screen_Table_Title_Label.setText("Assigned Patients");

    }
        
        private void hideDoctor_AssignedPatients_Elements() {
        Doctor_Assigned_Patients_Screen_Table_Title_Label.setText("You do not have any assigned patients.");


    }
        
        private void hidePersonScreenElements() {
        Person_Screen_Table_Label.setText("No Hospitals Found");
        Person_Screen_Pincode_Label.setVisible(true);
        Person_Screen_Pincode_TextField.setVisible(true);
        Person_Screen_Search_Button.setVisible(true);
        Person_Screen_ViewAllButton.setVisible(true);
    }
        
    private void showPersonScreenElements() {
        Person_Screen_Table_Label.setText("All Hospitals");
        Person_Screen_Pincode_Label.setVisible(true);
        Person_Screen_Pincode_TextField.setVisible(true);
        Person_Screen_Search_Button.setVisible(true);
        Person_Screen_ViewAllButton.setVisible(true);
    }

    private void initPatientScreen_All_Encounters(Patient patient) {
        patient_all_encounters_DefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
        Patient_Screen_EncounterHistoryTable1.setModel(patient_all_encounters_DefaultTableModel);
        Patient_Screen_EncounterHistoryTable1.setPreferredSize(null);
    }

    private void initHospital_Screen_AddPatient(Hospital selecteHospital) {
        Hospital_Screen_AddPatient_Panel_Delete_UpdatePanel.setVisible(false);
        Hospital_Admin_Add_PatientScreen_Id_Textfield.setText("");
        Hospital_Admin_Add_PatientScreen_Textfield.setText("");
        Hospital_Admin_Add_PatientScreen__TextField.setText("");
        Hospital_Admin_Add_PatientScreen_Phone_TextField.setText("");
        Hospital_Admin_Add_PatientScreen_Address_TextField.setText("");
        Hospital_Admin_Add_PatientScreen_Pincode_TextField.setText("");
        Hospital_Admin_Add_PatientScreen_ComboBox.setSelectedIndex(0);
        Hospital_Admin_Add_PatientScreen_HospitalNameTextField.setText(selecteHospital.getHospitalName());
        Hospital_Admin_Add_PatientScreen_HospitaIdTextField.setText(selecteHospital.getHospitalID());
        Hospital_Admin_Add_PatientScreen_DoctorIDTextField.setText("-");
        Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel = new DefaultTableModel(new String[]{"#", "ID", "Name", "Doctor", "Hospital"}, 0);
        Hospital_Admin_Add_PatientScreen_All_Patients_Table.setModel(Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel);
        Hospital_Admin_Add_PatientScreen_All_Patients_Table.setPreferredSize(null);
            
        doctorsDefaultListModel = new DefaultListModel();
        
        Hospital_Admin_Add_PatientScreen_HospitalNameTextField.setText(selecteHospital.getHospitalName());
        Hospital_Admin_Add_PatientScreen_HospitaIdTextField.setText(selecteHospital.getHospitalID());
        
        ArrayList<Doctor> doctorArrayList = new ArrayList<>();
        doctorArrayList.addAll(selecteHospital.getWorkingdoctorsArrayList());
        
        if (!doctorArrayList.isEmpty()){
        for (int i = 0; i < doctorArrayList.size(); i++) {
            doctorsDefaultListModel.addElement(doctorArrayList.get(i).getDoctorName());
        }
        
        }
 
        Hospital_Admin_Add_PatientScreen_DoctorList.setModel(doctorsDefaultListModel);

        Hospital_Admin_Select_DoctorListSelectionListener = (ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                JList source = (JList) event.getSource();
                if (source.getSelectedValue() != null) {
                    Hospital_Admin_Add_PatientScreen_DoctorIDTextField.setText(doctorArrayList.get(Hospital_Admin_Add_PatientScreen_DoctorList.getSelectedIndex()).getDoctorId());
                }
            }
        };

        Hospital_Admin_Add_PatientScreen_DoctorList.addListSelectionListener(Hospital_Admin_Select_DoctorListSelectionListener);
        
        ArrayList<Patient> patientsArrayList = new ArrayList<>();
        patientsArrayList.addAll(selecteHospital.getEnrolledPatientsArrayList());       
        
        if (!patientsArrayList.isEmpty()) {
            setDataOnAllPatientsTable("HOSPITAL_viewAllPatientsTable", Hospital_Admin_AddPatient_Screen_AllPatientsDefaultTableModel, patientsArrayList, Hospital_Admin_Add_PatientScreen_All_Patients_Table);
        } else {
        }

    }

    private void initPatient_Screen_EncounterHistory() {
        String patientIdToSearch = DataStorageClass.USERID;
                    for (int i = 0; i < DataStorageClass.hospital_Screen_HospitalArrayList.size(); i++) {

               ArrayList<Patient> patientsArrayList = DataStorageClass.hospital_Screen_HospitalArrayList.get(i).getEnrolledPatientsArrayList();
                if (!patientsArrayList.isEmpty()) {
                    for (int j = 0; j < patientsArrayList.size(); j++) {
                        if (patientsArrayList.get(j).getPatientId().equals(patientIdToSearch)) {
                            Patient_Screen_PatientId_TextField.setText(patientsArrayList.get(j).getPatientId());
                            Patient_Screen_Patient_Name_TextField.setText(patientsArrayList.get(j).getPatientName());
                            Patient_Screen_PatientPhone_TextField.setText(patientsArrayList.get(j).getPatientPhone());
                            Patient_Screen_Hospital_TextField.setText(patientsArrayList.get(j).getPatientHospitalName());
                            Patient_Screen_DoctorName_TextField.setText(patientsArrayList.get(j).getdoctorName());
                            HOSPITAL_ARRAYLIST_INDEX = i;
                            PATIENT_ARRAYLIST_INDEX = j;
                            if (!patientsArrayList.get(i).getEncountersArraylist().isEmpty()) {
                                superadmin_Encounters_Screen_TableDataDefaultTableModel = new DefaultTableModel(new String[]{"#", "Time", "Temperature", "Blood Pressure"}, 0);
                                Patient_Screen_EncounterHistoryTable1.setModel(superadmin_Encounters_Screen_TableDataDefaultTableModel);
                                setDataOnAllEncountersTable("viewAllEncountersTable", superadmin_Encounters_Screen_TableDataDefaultTableModel, patientsArrayList.get(i).getEncountersArraylist(), Patient_Screen_EncounterHistoryTable1);
                            }
                            i = DataStorageClass.hospital_Screen_HospitalArrayList.size();
                            j = patientsArrayList.size();
                        }
                    }
                }
            }
            getSelectedDoctor();
    }


        private int getselecteduserindex(String userid)
        {
            int index = -1;
           for (int i = 0; i < DataStorageClass.userArrayList.size(); i++)
           {
           if (DataStorageClass.userArrayList.get(i).getId().equals(userid))
           {          
               index = i;
               System.out.print("role changed to " +  DataStorageClass.userArrayList.get(i).getRole() + " id " + DataStorageClass.userArrayList.get(i).getId());
               i = DataStorageClass.userArrayList.size();
           }
           }
           return index;
        }


}
